"use strict";(self.webpackChunkimdeepmind=self.webpackChunkimdeepmind||[]).push([[5910],{38855:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>t,contentTitle:()=>c,default:()=>g,frontMatter:()=>r,metadata:()=>s,toc:()=>a});const s=JSON.parse('{"id":"version-control/git/git-config","title":"Git config","description":"The git config command is used to configure Git settings, including user information, repository-specific settings, and system-wide configurations. These configurations help customize how Git behaves in different scenarios, like defining who commits to the repository, setting editor preferences, and more.","source":"@site/docs/version-control/git/git-config.md","sourceDirName":"version-control/git","slug":"/version-control/git/git-config","permalink":"/docs/version-control/git/git-config","draft":false,"unlisted":false,"editUrl":"https://github.com/imdeepmind/imdeepmind.github.io/blob/main/docs/version-control/git/git-config.md","tags":[],"version":"current","lastUpdatedBy":"Abhishek Chatterjee","lastUpdatedAt":1735631792000,"sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"Git Internals","permalink":"/docs/version-control/git/git-internals"},"next":{"title":"Git Merge, Rebase, and Squash","permalink":"/docs/version-control/git/merge-and-rebase"}}');var o=i(74848),l=i(28453);const r={sidebar_position:3},c="Git config",t={},a=[{value:"Global, Local, and System Configurations",id:"global-local-and-system-configurations",level:2},{value:"Syntax of <code>git config</code> Command",id:"syntax-of-git-config-command",level:2},{value:"Configuring Git at Different Levels",id:"configuring-git-at-different-levels",level:2},{value:"Local Configuration",id:"local-configuration",level:3},{value:"Global Configuration",id:"global-configuration",level:3},{value:"System Configuration",id:"system-configuration",level:3},{value:"Common Git Configurations",id:"common-git-configurations",level:2},{value:"User Information",id:"user-information",level:3},{value:"Editor Configuration",id:"editor-configuration",level:3},{value:"Line Ending Handling",id:"line-ending-handling",level:3},{value:"Color Output",id:"color-output",level:3},{value:"Aliases",id:"aliases",level:3},{value:"Viewing and Modifying Configuration",id:"viewing-and-modifying-configuration",level:2},{value:"View Configuration",id:"view-configuration",level:3},{value:"Edit Configuration Manually",id:"edit-configuration-manually",level:3},{value:"Unset Configuration",id:"unset-configuration",level:3},{value:"Git Config Command Options",id:"git-config-command-options",level:2},{value:"Examples of Practical Configurations",id:"examples-of-practical-configurations",level:2},{value:"Configuration Files",id:"configuration-files",level:2}];function d(n){const e={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,l.R)(),...n.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(e.header,{children:(0,o.jsx)(e.h1,{id:"git-config",children:"Git config"})}),"\n",(0,o.jsxs)(e.p,{children:["The ",(0,o.jsx)(e.code,{children:"git config"})," command is used to configure Git settings, including user information, repository-specific settings, and system-wide configurations. These configurations help customize how Git behaves in different scenarios, like defining who commits to the repository, setting editor preferences, and more."]}),"\n",(0,o.jsx)(e.h2,{id:"global-local-and-system-configurations",children:"Global, Local, and System Configurations"}),"\n",(0,o.jsx)(e.p,{children:"Git settings can be configured at three levels:"}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:"System"}),": Applies to all users on the system."]}),"\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:"Global"}),": Applies to the current user across all repositories."]}),"\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:"Local"}),": Applies only to a specific repository."]}),"\n"]}),"\n",(0,o.jsx)(e.p,{children:"The precedence order is:"}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:"Local"})," settings override ",(0,o.jsx)(e.strong,{children:"Global"})," settings."]}),"\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:"Global"})," settings override ",(0,o.jsx)(e.strong,{children:"System"})," settings."]}),"\n"]}),"\n",(0,o.jsxs)(e.h2,{id:"syntax-of-git-config-command",children:["Syntax of ",(0,o.jsx)(e.code,{children:"git config"})," Command"]}),"\n",(0,o.jsxs)(e.p,{children:["The basic syntax for ",(0,o.jsx)(e.code,{children:"git config"})," is:"]}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-bash",children:"git config [<options>] <key> <value>\n"})}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:"<options>"}),": Specific flags or arguments for configuration."]}),"\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:"<key>"}),": The configuration key to be set (e.g., ",(0,o.jsx)(e.code,{children:"user.name"}),")."]}),"\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:"<value>"}),": The value to be assigned to the key (e.g., ",(0,o.jsx)(e.code,{children:"John Doe"}),")."]}),"\n"]}),"\n",(0,o.jsx)(e.h2,{id:"configuring-git-at-different-levels",children:"Configuring Git at Different Levels"}),"\n",(0,o.jsxs)(e.p,{children:["We can configure Git at various levels using ",(0,o.jsx)(e.code,{children:"git config"}),". Here's how each level works:"]}),"\n",(0,o.jsx)(e.h3,{id:"local-configuration",children:"Local Configuration"}),"\n",(0,o.jsxs)(e.p,{children:["This is repository-specific. Settings are stored in the ",(0,o.jsx)(e.code,{children:".git/config"})," file inside the repository directory."]}),"\n",(0,o.jsx)(e.p,{children:"To set a local configuration, run:"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-bash",children:"git config --local <key> <value>\n"})}),"\n",(0,o.jsx)(e.p,{children:"Example:"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-bash",children:'git config --local user.name "John Doe"\n'})}),"\n",(0,o.jsx)(e.h3,{id:"global-configuration",children:"Global Configuration"}),"\n",(0,o.jsxs)(e.p,{children:["This applies to all repositories for the current user. Settings are stored in the ",(0,o.jsx)(e.code,{children:"~/.gitconfig"})," file in the user\u2019s home directory."]}),"\n",(0,o.jsx)(e.p,{children:"To set a global configuration, run:"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-bash",children:"git config --global <key> <value>\n"})}),"\n",(0,o.jsx)(e.p,{children:"Example:"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-bash",children:'git config --global user.email "john.doe@example.com"\n'})}),"\n",(0,o.jsx)(e.h3,{id:"system-configuration",children:"System Configuration"}),"\n",(0,o.jsxs)(e.p,{children:["This is system-wide configuration that affects all users on the machine. Settings are stored in ",(0,o.jsx)(e.code,{children:"/etc/gitconfig"})," (for Linux/macOS) or ",(0,o.jsx)(e.code,{children:"C:\\ProgramData\\Git\\config"})," (for Windows)."]}),"\n",(0,o.jsx)(e.p,{children:"To set a system configuration, run:"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-bash",children:"git config --system <key> <value>\n"})}),"\n",(0,o.jsx)(e.p,{children:"Example:"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-bash",children:"git config --system core.autocrlf true\n"})}),"\n",(0,o.jsxs)(e.p,{children:[(0,o.jsx)(e.strong,{children:"Note"}),": Changing system-level settings may require administrative privileges."]}),"\n",(0,o.jsx)(e.h2,{id:"common-git-configurations",children:"Common Git Configurations"}),"\n",(0,o.jsx)(e.p,{children:"Here are some common configurations we may need to use frequently:"}),"\n",(0,o.jsx)(e.h3,{id:"user-information",children:"User Information"}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsxs)(e.li,{children:["\n",(0,o.jsxs)(e.p,{children:[(0,o.jsx)(e.strong,{children:"User Name"}),": Defines the name Git will associate with commits."]}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-bash",children:'git config --global user.name "John Doe"\n'})}),"\n"]}),"\n",(0,o.jsxs)(e.li,{children:["\n",(0,o.jsxs)(e.p,{children:[(0,o.jsx)(e.strong,{children:"User Email"}),": Defines the email Git will associate with commits."]}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-bash",children:'git config --global user.email "john.doe@example.com"\n'})}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(e.h3,{id:"editor-configuration",children:"Editor Configuration"}),"\n",(0,o.jsx)(e.p,{children:"Git uses a text editor for commit messages, rebasing, merging, etc. We can set a preferred editor."}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsxs)(e.li,{children:["\n",(0,o.jsxs)(e.p,{children:[(0,o.jsx)(e.strong,{children:"Set default editor to VSCode"}),":"]}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-bash",children:'git config --global core.editor "code --wait"\n'})}),"\n"]}),"\n",(0,o.jsxs)(e.li,{children:["\n",(0,o.jsxs)(e.p,{children:[(0,o.jsx)(e.strong,{children:"Set default editor to Vim"}),":"]}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-bash",children:'git config --global core.editor "vim"\n'})}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(e.h3,{id:"line-ending-handling",children:"Line Ending Handling"}),"\n",(0,o.jsx)(e.p,{children:"Git has settings for handling line endings, especially when working with multiple operating systems."}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsxs)(e.li,{children:["\n",(0,o.jsxs)(e.p,{children:[(0,o.jsx)(e.strong,{children:"core.autocrlf"}),": Converts line endings on commit/check-out."]}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.code,{children:"true"}),": Automatically converts line endings to LF on commit and to CRLF on checkout (Windows)."]}),"\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.code,{children:"input"}),": Converts line endings to LF on commit but doesn\u2019t change line endings on checkout (Linux/macOS)."]}),"\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.code,{children:"false"}),": No automatic conversion (used for Unix-based systems)."]}),"\n"]}),"\n",(0,o.jsx)(e.p,{children:"Example for Windows users:"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-bash",children:"git config --global core.autocrlf true\n"})}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(e.h3,{id:"color-output",children:"Color Output"}),"\n",(0,o.jsxs)(e.p,{children:["Git has colored output for better visibility. It can be configured using ",(0,o.jsx)(e.code,{children:"color.ui"}),"."]}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:"Enable colored output"}),":","\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-bash",children:"git config --global color.ui auto\n"})}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(e.h3,{id:"aliases",children:"Aliases"}),"\n",(0,o.jsx)(e.p,{children:"Git allows us to create aliases for commands to reduce typing."}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsxs)(e.li,{children:["\n",(0,o.jsxs)(e.p,{children:[(0,o.jsx)(e.strong,{children:"Example"}),": Set an alias for ",(0,o.jsx)(e.code,{children:"git status"})," to ",(0,o.jsx)(e.code,{children:"git st"}),":"]}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-bash",children:"git config --global alias.st status\n"})}),"\n"]}),"\n",(0,o.jsxs)(e.li,{children:["\n",(0,o.jsxs)(e.p,{children:[(0,o.jsx)(e.strong,{children:"List all aliases"}),":"]}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-bash",children:"git config --global --get-regexp alias\n"})}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(e.h2,{id:"viewing-and-modifying-configuration",children:"Viewing and Modifying Configuration"}),"\n",(0,o.jsxs)(e.p,{children:["We can use ",(0,o.jsx)(e.code,{children:"git config"})," to view the current settings or modify them."]}),"\n",(0,o.jsx)(e.h3,{id:"view-configuration",children:"View Configuration"}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:"View all settings"})," (from all levels):","\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-bash",children:"git config --list\n"})}),"\n"]}),"\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:"View a specific setting"}),":","\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-bash",children:"git config <key>\n"})}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(e.p,{children:"Example:"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-bash",children:"git config user.name\n"})}),"\n",(0,o.jsx)(e.h3,{id:"edit-configuration-manually",children:"Edit Configuration Manually"}),"\n",(0,o.jsx)(e.p,{children:"We can directly edit the configuration files using a text editor."}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsxs)(e.li,{children:["\n",(0,o.jsxs)(e.p,{children:[(0,o.jsx)(e.strong,{children:"Global config"}),":"]}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-bash",children:"vim ~/.gitconfig\n"})}),"\n"]}),"\n",(0,o.jsxs)(e.li,{children:["\n",(0,o.jsxs)(e.p,{children:[(0,o.jsx)(e.strong,{children:"Local config"})," (inside a repository):"]}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-bash",children:"vim .git/config\n"})}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(e.h3,{id:"unset-configuration",children:"Unset Configuration"}),"\n",(0,o.jsxs)(e.p,{children:["We can remove specific configurations using ",(0,o.jsx)(e.code,{children:"--unset"}),"."]}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsxs)(e.li,{children:["\n",(0,o.jsxs)(e.p,{children:[(0,o.jsx)(e.strong,{children:"Remove a specific configuration"}),":"]}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-bash",children:"git config --global --unset user.name\n"})}),"\n"]}),"\n",(0,o.jsxs)(e.li,{children:["\n",(0,o.jsxs)(e.p,{children:[(0,o.jsx)(e.strong,{children:"Remove a configuration from the local repository"}),":"]}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-bash",children:"git config --local --unset user.name\n"})}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(e.h2,{id:"git-config-command-options",children:"Git Config Command Options"}),"\n",(0,o.jsxs)(e.p,{children:["Here are some options that we can use with ",(0,o.jsx)(e.code,{children:"git config"}),":"]}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:(0,o.jsx)(e.code,{children:"--global"})}),": Apply the configuration globally for the current user."]}),"\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:(0,o.jsx)(e.code,{children:"--local"})}),": Apply the configuration only to the current repository."]}),"\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:(0,o.jsx)(e.code,{children:"--system"})}),": Apply the configuration for all users on the system."]}),"\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:(0,o.jsx)(e.code,{children:"--list"})}),": List all the settings (including global and local)."]}),"\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:(0,o.jsx)(e.code,{children:"--get"})}),": Get the value of a specific configuration key."]}),"\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:(0,o.jsx)(e.code,{children:"--get-all"})}),": Get all values for a particular key."]}),"\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:(0,o.jsx)(e.code,{children:"--unset"})}),": Unset a particular configuration key."]}),"\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:(0,o.jsx)(e.code,{children:"--edit"})}),": Edit the configuration file using the default editor."]}),"\n"]}),"\n",(0,o.jsx)(e.h2,{id:"examples-of-practical-configurations",children:"Examples of Practical Configurations"}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsxs)(e.li,{children:["\n",(0,o.jsxs)(e.p,{children:[(0,o.jsx)(e.strong,{children:"Set user information globally"}),":"]}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-bash",children:'git config --global user.name "Alice"\ngit config --global user.email "alice@example.com"\n'})}),"\n"]}),"\n",(0,o.jsxs)(e.li,{children:["\n",(0,o.jsxs)(e.p,{children:[(0,o.jsx)(e.strong,{children:"Set color output"}),":"]}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-bash",children:"git config --global color.ui auto\n"})}),"\n"]}),"\n",(0,o.jsxs)(e.li,{children:["\n",(0,o.jsxs)(e.p,{children:[(0,o.jsx)(e.strong,{children:"Set default editor to Nano"}),":"]}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-bash",children:'git config --global core.editor "nano"\n'})}),"\n"]}),"\n",(0,o.jsxs)(e.li,{children:["\n",(0,o.jsxs)(e.p,{children:[(0,o.jsxs)(e.strong,{children:["Create an alias for ",(0,o.jsx)(e.code,{children:"git log"})]}),":"]}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-bash",children:'git config --global alias.lg "log --oneline --graph --all"\n'})}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(e.h2,{id:"configuration-files",children:"Configuration Files"}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsxs)(e.li,{children:["\n",(0,o.jsxs)(e.p,{children:[(0,o.jsxs)(e.strong,{children:[(0,o.jsx)(e.code,{children:"~/.gitconfig"})," (Global Config)"]}),":\nThis file stores global Git configuration for the user. It is typically located in the user's home directory."]}),"\n"]}),"\n",(0,o.jsxs)(e.li,{children:["\n",(0,o.jsxs)(e.p,{children:[(0,o.jsxs)(e.strong,{children:[(0,o.jsx)(e.code,{children:".git/config"})," (Local Config)"]}),":\nThis file stores configuration for a specific repository, inside the ",(0,o.jsx)(e.code,{children:".git"})," folder of the repository."]}),"\n"]}),"\n",(0,o.jsxs)(e.li,{children:["\n",(0,o.jsxs)(e.p,{children:[(0,o.jsxs)(e.strong,{children:[(0,o.jsx)(e.code,{children:"/etc/gitconfig"})," (System Config)"]}),":\nThis file contains system-wide Git configuration and is applied to all users on the system."]}),"\n"]}),"\n"]})]})}function g(n={}){const{wrapper:e}={...(0,l.R)(),...n.components};return e?(0,o.jsx)(e,{...n,children:(0,o.jsx)(d,{...n})}):d(n)}},28453:(n,e,i)=>{i.d(e,{R:()=>r,x:()=>c});var s=i(96540);const o={},l=s.createContext(o);function r(n){const e=s.useContext(l);return s.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function c(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(o):n.components||o:r(n.components),s.createElement(l.Provider,{value:e},n.children)}}}]);