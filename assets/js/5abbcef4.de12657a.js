"use strict";(self.webpackChunkimdeepmind=self.webpackChunkimdeepmind||[]).push([[935],{43018:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"containers/terminology","title":"Terminologies","description":"Container","source":"@site/docs/containers/terminology.md","sourceDirName":"containers","slug":"/containers/terminology","permalink":"/docs/containers/terminology","draft":false,"unlisted":false,"editUrl":"https://github.com/imdeepmind/imdeepmind.github.io/blob/main/docs/containers/terminology.md","tags":[],"version":"current","lastUpdatedBy":"Abhishek Chatterjee","lastUpdatedAt":1756825858000,"sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"Introduction","permalink":"/docs/containers/introduction"},"next":{"title":"Introduction","permalink":"/docs/containers/docker/introduction"}}');var t=i(74848),s=i(28453);const o={sidebar_position:2},a="Terminologies",l={},c=[{value:"Container",id:"container",level:2},{value:"Container Image",id:"container-image",level:2},{value:"Container Runtime",id:"container-runtime",level:2},{value:"Container Engine",id:"container-engine",level:2},{value:"Container Registry",id:"container-registry",level:2},{value:"Dockerfile",id:"dockerfile",level:2},{value:"Container Orchestration",id:"container-orchestration",level:2},{value:"Namespace",id:"namespace",level:2},{value:"cgroups (Control Groups)",id:"cgroups-control-groups",level:2},{value:"OverlayFS",id:"overlayfs",level:2},{value:"Volume",id:"volume",level:2},{value:"Bind Mount",id:"bind-mount",level:2},{value:"Container Networking",id:"container-networking",level:2},{value:"Container Lifecycle",id:"container-lifecycle",level:2},{value:"Pod",id:"pod",level:2},{value:"Init Container",id:"init-container",level:2},{value:"Sidecar Container",id:"sidecar-container",level:2},{value:"Service Mesh",id:"service-mesh",level:2},{value:"OCI (Open Container Initiative)",id:"oci-open-container-initiative",level:2},{value:"Sandbox Container",id:"sandbox-container",level:2},{value:"Ephemeral Containers",id:"ephemeral-containers",level:2},{value:"Container Logs",id:"container-logs",level:2},{value:"Container Security",id:"container-security",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",ul:"ul",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"terminologies",children:"Terminologies"})}),"\n",(0,t.jsx)(n.h2,{id:"container",children:"Container"}),"\n",(0,t.jsx)(n.p,{children:"A lightweight, isolated environment that packages an application with all its dependencies, ensuring consistent execution across environments. Containers share the host operating system kernel but run as separate processes, providing efficiency and portability."}),"\n",(0,t.jsx)(n.h2,{id:"container-image",children:"Container Image"}),"\n",(0,t.jsx)(n.p,{children:"A read-only, immutable template used to create containers. It contains the application code, runtime, libraries, environment variables, and configuration files."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Built using instructions defined in a Dockerfile (or similar manifest)."}),"\n",(0,t.jsx)(n.li,{children:"Stored in container registries."}),"\n",(0,t.jsx)(n.li,{children:"Versioned and layered for reusability."}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"container-runtime",children:"Container Runtime"}),"\n",(0,t.jsx)(n.p,{children:"The software component responsible for running containers on the host operating system. It handles container lifecycle operations like starting, stopping, and resource isolation.\nExamples:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Docker Engine"}),"\n",(0,t.jsx)(n.li,{children:"containerd"}),"\n",(0,t.jsx)(n.li,{children:"runc"}),"\n",(0,t.jsx)(n.li,{children:"CRI-O"}),"\n",(0,t.jsx)(n.li,{children:"Podman"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"container-engine",children:"Container Engine"}),"\n",(0,t.jsxs)(n.p,{children:["A higher-level tool that manages containers and interacts with the container runtime. It provides developer-friendly commands and APIs.\nExample: Docker Engine uses ",(0,t.jsx)(n.code,{children:"containerd"})," and ",(0,t.jsx)(n.code,{children:"runc"})," under the hood."]}),"\n",(0,t.jsx)(n.h2,{id:"container-registry",children:"Container Registry"}),"\n",(0,t.jsx)(n.p,{children:"A storage and distribution system for container images. Registries allow developers to push and pull images easily.\nExamples:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Docker Hub"}),"\n",(0,t.jsx)(n.li,{children:"Amazon Elastic Container Registry (ECR)"}),"\n",(0,t.jsx)(n.li,{children:"Google Container Registry (GCR)"}),"\n",(0,t.jsx)(n.li,{children:"GitHub Container Registry"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"dockerfile",children:"Dockerfile"}),"\n",(0,t.jsxs)(n.p,{children:["A text file that defines the instructions for building a container image.\nEach instruction (e.g., ",(0,t.jsx)(n.code,{children:"FROM"}),", ",(0,t.jsx)(n.code,{children:"RUN"}),", ",(0,t.jsx)(n.code,{children:"COPY"}),", ",(0,t.jsx)(n.code,{children:"EXPOSE"}),") adds a new layer to the image."]}),"\n",(0,t.jsx)(n.h2,{id:"container-orchestration",children:"Container Orchestration"}),"\n",(0,t.jsx)(n.p,{children:"The process of automating deployment, scaling, networking, and management of containers in large-scale environments.\nExamples:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Kubernetes"}),"\n",(0,t.jsx)(n.li,{children:"Docker Swarm"}),"\n",(0,t.jsx)(n.li,{children:"Apache Mesos"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"namespace",children:"Namespace"}),"\n",(0,t.jsx)(n.p,{children:"A Linux kernel feature that provides isolation for containers. Namespaces ensure each container has its own view of system resources (like processes, networking, and mounts).\nCommon namespaces:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"PID (process isolation)"}),"\n",(0,t.jsx)(n.li,{children:"NET (network stack isolation)"}),"\n",(0,t.jsx)(n.li,{children:"IPC (inter-process communication isolation)"}),"\n",(0,t.jsx)(n.li,{children:"MNT (file system mount isolation)"}),"\n",(0,t.jsx)(n.li,{children:"UTS (hostname isolation)"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"cgroups-control-groups",children:"cgroups (Control Groups)"}),"\n",(0,t.jsx)(n.p,{children:"Another Linux kernel feature used by containers to limit and monitor resource usage (CPU, memory, disk I/O, network).\nEnsures one container cannot consume all system resources."}),"\n",(0,t.jsx)(n.h2,{id:"overlayfs",children:"OverlayFS"}),"\n",(0,t.jsx)(n.p,{children:"A union filesystem used in containers that allows layering of images."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Base layers (read-only) can be reused across images."}),"\n",(0,t.jsx)(n.li,{children:"The top layer (read-write) stores changes made by the container."}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"volume",children:"Volume"}),"\n",(0,t.jsx)(n.p,{children:"A mechanism to persist data generated by containers. Since containers are ephemeral, volumes ensure data survives container restarts.\nTypes of volumes:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Named volumes"}),"\n",(0,t.jsx)(n.li,{children:"Host-mounted volumes"}),"\n",(0,t.jsx)(n.li,{children:"tmpfs volumes"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"bind-mount",children:"Bind Mount"}),"\n",(0,t.jsx)(n.p,{children:"A type of volume that mounts a directory or file from the host machine directly into a container. Useful for development but couples containers tightly to the host."}),"\n",(0,t.jsx)(n.h2,{id:"container-networking",children:"Container Networking"}),"\n",(0,t.jsx)(n.p,{children:"Defines how containers communicate with each other and with the outside world.\nNetworking modes:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Bridge (default, private network for containers)"}),"\n",(0,t.jsx)(n.li,{children:"Host (shares host\u2019s network stack)"}),"\n",(0,t.jsx)(n.li,{children:"Overlay (multi-host networking for orchestration systems)"}),"\n",(0,t.jsx)(n.li,{children:"Macvlan (assigns MAC addresses to containers)"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"container-lifecycle",children:"Container Lifecycle"}),"\n",(0,t.jsx)(n.p,{children:"The stages a container goes through:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Created \u2192 Started \u2192 Running \u2192 Paused \u2192 Stopped \u2192 Removed"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"pod",children:"Pod"}),"\n",(0,t.jsx)(n.p,{children:"A concept from Kubernetes. A pod is the smallest deployable unit, containing one or more tightly coupled containers that share networking and storage."}),"\n",(0,t.jsx)(n.h2,{id:"init-container",children:"Init Container"}),"\n",(0,t.jsx)(n.p,{children:"A special container in Kubernetes that runs before the main application containers in a pod.\nUsed for setup tasks like initializing databases or loading configuration files."}),"\n",(0,t.jsx)(n.h2,{id:"sidecar-container",children:"Sidecar Container"}),"\n",(0,t.jsx)(n.p,{children:"A helper container that runs alongside the main application container in the same pod.\nExamples:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Logging agent"}),"\n",(0,t.jsx)(n.li,{children:"Monitoring agent"}),"\n",(0,t.jsx)(n.li,{children:"Proxy (e.g., Envoy in service mesh)"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"service-mesh",children:"Service Mesh"}),"\n",(0,t.jsx)(n.p,{children:"A dedicated infrastructure layer for managing service-to-service communication between containers/microservices.\nExamples: Istio, Linkerd, Consul."}),"\n",(0,t.jsx)(n.h2,{id:"oci-open-container-initiative",children:"OCI (Open Container Initiative)"}),"\n",(0,t.jsx)(n.p,{children:"A Linux Foundation project that standardizes container formats and runtimes."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"OCI Image Specification \u2192 how images should be packaged."}),"\n",(0,t.jsx)(n.li,{children:"OCI Runtime Specification \u2192 how runtimes should execute containers."}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"sandbox-container",children:"Sandbox Container"}),"\n",(0,t.jsx)(n.p,{children:"A container that provides additional isolation, often using lightweight virtual machines for enhanced security.\nExample: gVisor, Kata Containers."}),"\n",(0,t.jsx)(n.h2,{id:"ephemeral-containers",children:"Ephemeral Containers"}),"\n",(0,t.jsx)(n.p,{children:"Short-lived containers designed to run temporary tasks (like debugging) without affecting the main application."}),"\n",(0,t.jsx)(n.h2,{id:"container-logs",children:"Container Logs"}),"\n",(0,t.jsx)(n.p,{children:"Output streams (stdout, stderr) from containers. Logs can be captured, persisted, and aggregated using log drivers or monitoring tools like Fluentd, ELK, or Splunk."}),"\n",(0,t.jsx)(n.h2,{id:"container-security",children:"Container Security"}),"\n",(0,t.jsx)(n.p,{children:"Key concepts include:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Image scanning (check for vulnerabilities in base images)"}),"\n",(0,t.jsx)(n.li,{children:"Least privilege (run as non-root user)"}),"\n",(0,t.jsx)(n.li,{children:"Signing and verifying images"}),"\n",(0,t.jsx)(n.li,{children:"Runtime security (detect abnormal behavior in running containers)"}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},28453:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>a});var r=i(96540);const t={},s=r.createContext(t);function o(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);