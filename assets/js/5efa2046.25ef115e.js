"use strict";(self.webpackChunkimdeepmind=self.webpackChunkimdeepmind||[]).push([[3294],{75257:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>t,metadata:()=>o,toc:()=>c});const o=JSON.parse('{"id":"programming/programming-languages/go/goroutines/introduction","title":"Introduction","description":"A goroutine is a lightweight, independently executing function managed by the Go runtime. Goroutines are Go\u2019s built-in way of handling concurrency, allowing functions to run asynchronously and enabling many tasks to execute seemingly at the same time.","source":"@site/docs/programming/programming-languages/go/goroutines/introduction.md","sourceDirName":"programming/programming-languages/go/goroutines","slug":"/programming/programming-languages/go/goroutines/introduction","permalink":"/docs/programming/programming-languages/go/goroutines/introduction","draft":false,"unlisted":false,"editUrl":"https://github.com/imdeepmind/imdeepmind.github.io/blob/main/docs/programming/programming-languages/go/goroutines/introduction.md","tags":[],"version":"current","lastUpdatedBy":"Abhishek Chatterjee","lastUpdatedAt":1754997544000,"sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"Arrays, Slices and, Maps","permalink":"/docs/programming/programming-languages/go/array-maps"},"next":{"title":"Wait Groups","permalink":"/docs/programming/programming-languages/go/goroutines/wait-group"}}');var r=i(74848),s=i(28453);const t={sidebar_position:1},a="Introduction",l={},c=[{value:"What is a Goroutine?",id:"what-is-a-goroutine",level:2},{value:"Why Goroutines Exist",id:"why-goroutines-exist",level:2},{value:"How Goroutines Work Under the Hood",id:"how-goroutines-work-under-the-hood",level:2},{value:"Lifecycle of a Goroutine",id:"lifecycle-of-a-goroutine",level:2},{value:"Key Characteristics",id:"key-characteristics",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",mermaid:"mermaid",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"introduction",children:"Introduction"})}),"\n",(0,r.jsxs)(n.p,{children:["A ",(0,r.jsx)(n.strong,{children:"goroutine"})," is a lightweight, independently executing function managed by the Go runtime. Goroutines are Go\u2019s built-in way of handling concurrency, allowing functions to run ",(0,r.jsx)(n.strong,{children:"asynchronously"})," and enabling many tasks to execute seemingly at the same time."]}),"\n",(0,r.jsx)(n.h2,{id:"what-is-a-goroutine",children:"What is a Goroutine?"}),"\n",(0,r.jsx)(n.p,{children:"A goroutine is a function that runs concurrently with other goroutines in the same program."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["They are much ",(0,r.jsx)(n.strong,{children:"cheaper"})," than operating system threads."]}),"\n",(0,r.jsxs)(n.li,{children:["We create them by prefixing a function call with the ",(0,r.jsx)(n.code,{children:"go"})," keyword."]}),"\n",(0,r.jsx)(n.li,{children:"Once started, a goroutine is scheduled and managed by the Go runtime, not by the operating system."}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n    "fmt"\n    "time"\n)\n\nfunc sayHello() {\n    fmt.Println("Hello from goroutine!")\n}\n\nfunc main() {\n    go sayHello() // start goroutine\n    fmt.Println("Hello from main!")\n    time.Sleep(time.Second) // allow goroutine to finish\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"why-goroutines-exist",children:"Why Goroutines Exist"}),"\n",(0,r.jsx)(n.p,{children:"Before goroutines, developers often had to manage OS threads directly, which is:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Resource-heavy"}),"\n",(0,r.jsx)(n.li,{children:"Complex to coordinate"}),"\n",(0,r.jsx)(n.li,{children:"Difficult to scale to thousands or millions of concurrent tasks"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Goroutines solve this by being:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Lightweight"})," (few KB initial stack, grows dynamically)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Cheap to create"})," (can have millions in a program)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Scheduled in user space"})," (no costly kernel context switches for every scheduling decision)"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"how-goroutines-work-under-the-hood",children:"How Goroutines Work Under the Hood"}),"\n",(0,r.jsxs)(n.p,{children:["Go uses its own scheduler to manage goroutines efficiently. This is based on the ",(0,r.jsx)(n.strong,{children:"G\u2013M\u2013P model"}),":"]}),"\n",(0,r.jsx)("div",{style:{textAlign:"center"},children:(0,r.jsx)(n.mermaid,{value:'graph LR\n    subgraph M1["M1 (OS Thread)"]\n        P1["P1 (Processor)"] --\x3e|Runs| G1["G1 (Goroutine)"]\n        P1 --\x3e|Runs| G2["G2 (Goroutine)"]\n    end\n    subgraph M2["M2 (OS Thread)"]\n        P2["P2 (Processor)"] --\x3e|Runs| G3["G3 (Goroutine)"]\n        P2 --\x3e|Runs| G4["G4 (Goroutine)"]\n    end\n    subgraph M3["M3 (OS Thread)"]\n        P3["P3 (Processor)"] --\x3e|Runs| G5["G5 (Goroutine)"]\n        P3 --\x3e|Runs| G6["G6 (Goroutine)"]\n    end\n    classDef goroutine fill:#f4f4f4,stroke:#333,stroke-width:1px;\n    class G1,G2,G3,G4,G5,G6 goroutine;'})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"G"}),": Goroutine (the task)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"M"}),": Machine (OS thread running goroutines)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"P"}),": Processor (manages the execution context and run queue)"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["The scheduler maps many goroutines (",(0,r.jsx)(n.code,{children:"G"}),") to a limited number of OS threads (",(0,r.jsx)(n.code,{children:"M"}),") through processors (",(0,r.jsx)(n.code,{children:"P"}),").\nBy default, the number of processors is equal to the number of CPU cores (",(0,r.jsx)(n.code,{children:"GOMAXPROCS"}),")."]}),"\n",(0,r.jsx)(n.h2,{id:"lifecycle-of-a-goroutine",children:"Lifecycle of a Goroutine"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Creation"})," \u2014 Starts when we call a function with the ",(0,r.jsx)(n.code,{children:"go"})," keyword."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Execution"})," \u2014 Runs independently, sharing the program\u2019s memory space with other goroutines."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Termination"})," \u2014 Ends when the function returns."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Program Exit"})," \u2014 If ",(0,r.jsx)(n.code,{children:"main()"})," finishes, all goroutines are stopped immediately."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"key-characteristics",children:"Key Characteristics"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Extremely lightweight"})," compared to threads"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Not tied"})," to any specific OS thread"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Managed by Go runtime"}),", not the OS directly"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Stacks grow and shrink"})," as needed"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Can run millions"})," in one program without exhausting resources"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},28453:(e,n,i)=>{i.d(n,{R:()=>t,x:()=>a});var o=i(96540);const r={},s=o.createContext(r);function t(e){const n=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:t(e.components),o.createElement(s.Provider,{value:n},e.children)}}}]);