"use strict";(self.webpackChunkimdeepmind=self.webpackChunkimdeepmind||[]).push([[1587],{58715:(e,n,l)=>{l.r(n),l.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>p,frontMatter:()=>i,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"containers/kubernetes/replication-sets","title":"ReplicationController and ReplicaSet","description":"ReplicationController (RC)","source":"@site/docs/containers/kubernetes/replication-sets.md","sourceDirName":"containers/kubernetes","slug":"/containers/kubernetes/replication-sets","permalink":"/docs/containers/kubernetes/replication-sets","draft":false,"unlisted":false,"editUrl":"https://github.com/imdeepmind/imdeepmind.github.io/blob/main/docs/containers/kubernetes/replication-sets.md","tags":[],"version":"current","lastUpdatedBy":"Abhishek Chatterjee","lastUpdatedAt":1757782698000,"sidebarPosition":5,"frontMatter":{"sidebar_position":5},"sidebar":"tutorialSidebar","previous":{"title":"Pods","permalink":"/docs/containers/kubernetes/pods"},"next":{"title":"Deployments","permalink":"/docs/containers/kubernetes/deployments"}}');var t=l(74848),s=l(28453);const i={sidebar_position:5},a="ReplicationController and ReplicaSet",c={},d=[{value:"ReplicationController (RC)",id:"replicationcontroller-rc",level:2},{value:"Key Features",id:"key-features",level:3},{value:"Example: ReplicationController YAML",id:"example-replicationcontroller-yaml",level:3},{value:"ReplicaSet (RS)",id:"replicaset-rs",level:2},{value:"Key Features",id:"key-features-1",level:3},{value:"Example: ReplicaSet YAML",id:"example-replicaset-yaml",level:3},{value:"kubectl Commands for RC and RS",id:"kubectl-commands-for-rc-and-rs",level:2},{value:"Create",id:"create",level:3},{value:"Get",id:"get",level:3},{value:"Describe",id:"describe",level:3},{value:"Scale",id:"scale",level:3},{value:"Update",id:"update",level:3},{value:"Delete",id:"delete",level:3},{value:"Debugging Pods under RC/RS",id:"debugging-pods-under-rcrs",level:3},{value:"Difference Between RC and RS",id:"difference-between-rc-and-rs",level:2}];function o(e){const n={blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"replicationcontroller-and-replicaset",children:"ReplicationController and ReplicaSet"})}),"\n",(0,t.jsx)(n.h2,{id:"replicationcontroller-rc",children:"ReplicationController (RC)"}),"\n",(0,t.jsxs)(n.p,{children:["A ",(0,t.jsx)(n.strong,{children:"ReplicationController (RC)"})," is a legacy Kubernetes resource that ensures a specified number of Pod replicas are running at any given time. If a Pod fails or is deleted, the RC automatically creates a replacement."]}),"\n",(0,t.jsx)(n.h3,{id:"key-features",children:"Key Features"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Ensures ",(0,t.jsx)(n.strong,{children:"high availability"})," of Pods."]}),"\n",(0,t.jsxs)(n.li,{children:["Supports ",(0,t.jsx)(n.strong,{children:"scaling"})," Pods up or down."]}),"\n",(0,t.jsxs)(n.li,{children:["Performs ",(0,t.jsx)(n.strong,{children:"self-healing"})," of failed Pods."]}),"\n",(0,t.jsxs)(n.li,{children:["Works only with ",(0,t.jsx)(n.strong,{children:"equality-based selectors"})," (e.g., ",(0,t.jsx)(n.code,{children:"app=nginx"}),")."]}),"\n"]}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Note:"})," ReplicaSet has largely replaced ReplicationController, but RC is still supported for backward compatibility."]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"example-replicationcontroller-yaml",children:"Example: ReplicationController YAML"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"apiVersion: v1\nkind: ReplicationController\nmetadata:\n  name: nginx-rc\nspec:\n  replicas: 3\n  selector:\n    app: nginx\n  template:\n    metadata:\n      labels:\n        app: nginx\n    spec:\n      containers:\n        - name: nginx\n          image: nginx:latest\n          ports:\n            - containerPort: 80\n"})}),"\n",(0,t.jsx)(n.h2,{id:"replicaset-rs",children:"ReplicaSet (RS)"}),"\n",(0,t.jsxs)(n.p,{children:["A ",(0,t.jsx)(n.strong,{children:"ReplicaSet (RS)"})," is the next-generation controller that replaces ReplicationController. It provides the same functionality but supports ",(0,t.jsx)(n.strong,{children:"set-based selectors"}),", making it more flexible."]}),"\n",(0,t.jsx)(n.h3,{id:"key-features-1",children:"Key Features"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Ensures ",(0,t.jsx)(n.strong,{children:"desired number of Pods"})," are running."]}),"\n",(0,t.jsxs)(n.li,{children:["Supports both ",(0,t.jsx)(n.strong,{children:"equality-based"})," and ",(0,t.jsx)(n.strong,{children:"set-based selectors"})," (e.g., ",(0,t.jsx)(n.code,{children:"app in (frontend, backend)"}),")."]}),"\n",(0,t.jsxs)(n.li,{children:["Typically ",(0,t.jsx)(n.strong,{children:"used by Deployments"}),", rather than being created directly."]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"example-replicaset-yaml",children:"Example: ReplicaSet YAML"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"apiVersion: apps/v1\nkind: ReplicaSet\nmetadata:\n  name: nginx-rs\nspec:\n  replicas: 3\n  selector:\n    matchExpressions:\n      - key: app\n        operator: In\n        values:\n          - nginx\n  template:\n    metadata:\n      labels:\n        app: nginx\n    spec:\n      containers:\n        - name: nginx\n          image: nginx:latest\n          ports:\n            - containerPort: 80\n"})}),"\n",(0,t.jsx)(n.h2,{id:"kubectl-commands-for-rc-and-rs",children:"kubectl Commands for RC and RS"}),"\n",(0,t.jsx)(n.h3,{id:"create",children:"Create"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"kubectl apply -f nginx-rc.yaml\nkubectl apply -f nginx-rs.yaml\n"})}),"\n",(0,t.jsx)(n.h3,{id:"get",children:"Get"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"kubectl get rc\nkubectl get rs\nkubectl get pods\n"})}),"\n",(0,t.jsx)(n.h3,{id:"describe",children:"Describe"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"kubectl describe rc nginx-rc\nkubectl describe rs nginx-rs\n"})}),"\n",(0,t.jsx)(n.h3,{id:"scale",children:"Scale"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Scale ReplicationController\nkubectl scale rc nginx-rc --replicas=5\n\n# Scale ReplicaSet\nkubectl scale rs nginx-rs --replicas=5\n"})}),"\n",(0,t.jsx)(n.h3,{id:"update",children:"Update"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"kubectl edit rc nginx-rc\nkubectl edit rs nginx-rs\n"})}),"\n",(0,t.jsx)(n.h3,{id:"delete",children:"Delete"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"kubectl delete rc nginx-rc\nkubectl delete rs nginx-rs\n"})}),"\n",(0,t.jsx)(n.h3,{id:"debugging-pods-under-rcrs",children:"Debugging Pods under RC/RS"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"kubectl logs <pod-name>\nkubectl exec -it <pod-name> -- /bin/sh\n"})}),"\n",(0,t.jsx)(n.h2,{id:"difference-between-rc-and-rs",children:"Difference Between RC and RS"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Feature"}),(0,t.jsx)(n.th,{children:"ReplicationController"}),(0,t.jsx)(n.th,{children:"ReplicaSet"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Status"}),(0,t.jsx)(n.td,{children:"Legacy"}),(0,t.jsx)(n.td,{children:"Modern, preferred"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Selector Type"}),(0,t.jsx)(n.td,{children:"Equality-based only"}),(0,t.jsx)(n.td,{children:"Equality + Set-based"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Usage"}),(0,t.jsx)(n.td,{children:"Rarely used today"}),(0,t.jsx)(n.td,{children:"Typically managed by Deployments"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Scalability"}),(0,t.jsx)(n.td,{children:"Supported"}),(0,t.jsx)(n.td,{children:"Supported"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Self-Healing"}),(0,t.jsx)(n.td,{children:"Supported"}),(0,t.jsx)(n.td,{children:"Supported"})]})]})]})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(o,{...e})}):o(e)}},28453:(e,n,l)=>{l.d(n,{R:()=>i,x:()=>a});var r=l(96540);const t={},s=r.createContext(t);function i(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);