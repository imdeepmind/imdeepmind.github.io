"use strict";(self.webpackChunkimdeepmind=self.webpackChunkimdeepmind||[]).push([[2569],{87024:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>r,contentTitle:()=>l,default:()=>h,frontMatter:()=>c,metadata:()=>t,toc:()=>a});const t=JSON.parse('{"id":"programming/programming-languages/javascript/execution-context","title":"Execution Context","description":"JavaScript is a single-threaded, synchronous programming language. Despite its asynchronous capabilities (using features like setTimeout, Promises, etc.), its execution model revolves around the Execution Context, which is the environment in which JavaScript code is evaluated and executed.","source":"@site/docs/programming/programming-languages/javascript/execution-context.md","sourceDirName":"programming/programming-languages/javascript","slug":"/programming/programming-languages/javascript/execution-context","permalink":"/docs/programming/programming-languages/javascript/execution-context","draft":false,"unlisted":false,"editUrl":"https://github.com/imdeepmind/imdeepmind.github.io/blob/main/docs/programming/programming-languages/javascript/execution-context.md","tags":[],"version":"current","lastUpdatedBy":"Abhishek Chatterjee","lastUpdatedAt":1749211863000,"sidebarPosition":8,"frontMatter":{"sidebar_position":8},"sidebar":"tutorialSidebar","previous":{"title":"Conditions and Loops","permalink":"/docs/programming/programming-languages/javascript/conditions-loops"},"next":{"title":"Call Stack","permalink":"/docs/programming/programming-languages/javascript/call-stack"}}');var s=i(74848),o=i(28453);const c={sidebar_position:8},l="Execution Context",r={},a=[{value:"Types of Execution Contexts",id:"types-of-execution-contexts",level:2},{value:"Global Execution Context (GEC)",id:"global-execution-context-gec",level:3},{value:"Function Execution Context (FEC)",id:"function-execution-context-fec",level:3},{value:"Eval Execution Context",id:"eval-execution-context",level:3},{value:"Phases of Execution Context",id:"phases-of-execution-context",level:2},{value:"Creation Phase",id:"creation-phase",level:3},{value:"Execution Phase",id:"execution-phase",level:3}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"execution-context",children:"Execution Context"})}),"\n",(0,s.jsxs)(n.p,{children:["JavaScript is a single-threaded, synchronous programming language. Despite its asynchronous capabilities (using features like ",(0,s.jsx)(n.code,{children:"setTimeout"}),", Promises, etc.), its execution model revolves around the ",(0,s.jsx)(n.strong,{children:"Execution Context"}),", which is the environment in which JavaScript code is evaluated and executed."]}),"\n",(0,s.jsxs)(n.p,{children:["An ",(0,s.jsx)(n.strong,{children:"Execution Context"})," contains information about the code being executed, including variable declarations, functions, ",(0,s.jsx)(n.code,{children:"this"})," keyword binding, and the outer environment."]}),"\n",(0,s.jsx)(n.h2,{id:"types-of-execution-contexts",children:"Types of Execution Contexts"}),"\n",(0,s.jsx)(n.p,{children:"JavaScript has three main types of execution contexts:"}),"\n",(0,s.jsx)(n.h3,{id:"global-execution-context-gec",children:"Global Execution Context (GEC)"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"This is the default execution context."}),"\n",(0,s.jsx)(n.li,{children:"It is created when the JavaScript code is first executed."}),"\n",(0,s.jsxs)(n.li,{children:["It is associated with the global object, which is:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"window"})," in browsers."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"global"})," in Node.js."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["Responsibilities:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Sets up the global object (",(0,s.jsx)(n.code,{children:"window"})," or ",(0,s.jsx)(n.code,{children:"global"}),")."]}),"\n",(0,s.jsxs)(n.li,{children:["Sets the value of ",(0,s.jsx)(n.code,{children:"this"})," to the global object."]}),"\n",(0,s.jsx)(n.li,{children:"Prepares the global scope for execution of the code."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"function-execution-context-fec",children:"Function Execution Context (FEC)"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Created whenever a function is invoked."}),"\n",(0,s.jsx)(n.li,{children:"A new execution context is created for each function call."}),"\n",(0,s.jsxs)(n.li,{children:["Contains everything required to execute the function:","\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Arguments Object:"})," Provides access to the arguments passed to the function."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Scope Chain:"})," Used for variable resolution. Contains:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Variables declared inside the function."}),"\n",(0,s.jsx)(n.li,{children:"Variables from the outer environment (closures)."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsxs)(n.strong,{children:[(0,s.jsx)(n.code,{children:"this"})," Binding:"]})," Refers to the context in which the function is called."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Variable Environment:"})," Stores function-specific variables, constants, and inner functions."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"eval-execution-context",children:"Eval Execution Context"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Created when code is executed using the ",(0,s.jsx)(n.code,{children:"eval()"})," function."]}),"\n",(0,s.jsx)(n.li,{children:"Not commonly used and considered bad practice due to security and performance issues."}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"phases-of-execution-context",children:"Phases of Execution Context"}),"\n",(0,s.jsx)(n.p,{children:"An execution context has two phases:"}),"\n",(0,s.jsx)(n.h3,{id:"creation-phase",children:"Creation Phase"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"This happens before the code is executed."}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Key operations:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Global Context (GEC):"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Creates the global object (",(0,s.jsx)(n.code,{children:"window"})," or ",(0,s.jsx)(n.code,{children:"global"}),")."]}),"\n",(0,s.jsxs)(n.li,{children:["Initializes ",(0,s.jsx)(n.code,{children:"this"})," to the global object."]}),"\n",(0,s.jsx)(n.li,{children:"Sets up memory (heap) for variables and functions in the global scope."}),"\n",(0,s.jsxs)(n.li,{children:["Hoisting happens:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Variable declarations are set to ",(0,s.jsx)(n.code,{children:"undefined"}),"."]}),"\n",(0,s.jsx)(n.li,{children:"Functions are fully defined (stored in memory)."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Function Context (FEC):"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Sets up the ",(0,s.jsx)(n.code,{children:"arguments"})," object."]}),"\n",(0,s.jsxs)(n.li,{children:["Hoists variable declarations (initialized to ",(0,s.jsx)(n.code,{children:"undefined"}),")."]}),"\n",(0,s.jsx)(n.li,{children:"Hoists function declarations."}),"\n",(0,s.jsxs)(n.li,{children:["Sets up ",(0,s.jsx)(n.code,{children:"this"})," binding."]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Key Concept: Hoisting"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"During the creation phase, JavaScript moves function and variable declarations to the top of the context."}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Example:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:'console.log(a); // undefined (due to hoisting)\nvar a = 10;\n\ngreet(); // Hello!\nfunction greet() {\n  console.log("Hello!");\n}\n'})}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"execution-phase",children:"Execution Phase"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"JavaScript executes the code line by line."}),"\n",(0,s.jsx)(n.li,{children:"It assigns values to variables and executes functions."}),"\n",(0,s.jsxs)(n.li,{children:["If a function is called, a new function execution context is pushed onto the ",(0,s.jsx)(n.strong,{children:"Call Stack"}),"."]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},28453:(e,n,i)=>{i.d(n,{R:()=>c,x:()=>l});var t=i(96540);const s={},o=t.createContext(s);function c(e){const n=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);