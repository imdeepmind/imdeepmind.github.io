"use strict";(self.webpackChunkimdeepmind=self.webpackChunkimdeepmind||[]).push([[7253],{68909:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>u,frontMatter:()=>o,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"containers/kubernetes/introduction","title":"Introduction","description":"Kubernetes, often abbreviated as K8s, is an open-source container orchestration platform designed to automate the deployment, scaling, and management of containerized applications. It was originally developed by Google and is now maintained by the Cloud Native Computing Foundation (CNCF). Kubernetes has become the standard for managing large-scale containerized environments because it abstracts away infrastructure complexities and provides a consistent way to operate applications across different environments.","source":"@site/docs/containers/kubernetes/introduction.md","sourceDirName":"containers/kubernetes","slug":"/containers/kubernetes/introduction","permalink":"/docs/containers/kubernetes/introduction","draft":false,"unlisted":false,"editUrl":"https://github.com/imdeepmind/imdeepmind.github.io/blob/main/docs/containers/kubernetes/introduction.md","tags":[],"version":"current","lastUpdatedBy":"Abhishek Chatterjee","lastUpdatedAt":1757338997000,"sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"Container Orchestration","permalink":"/docs/containers/orchestration"},"next":{"title":"Container Runtime Interface","permalink":"/docs/containers/kubernetes/cri"}}');var s=t(74848),i=t(28453);const o={sidebar_position:1},a="Introduction",l={},d=[{value:"Why Kubernetes",id:"why-kubernetes",level:2},{value:"Kubernetes Architecture Overview",id:"kubernetes-architecture-overview",level:2},{value:"Control Plane Components",id:"control-plane-components",level:2},{value:"API Server",id:"api-server",level:3},{value:"etcd",id:"etcd",level:3},{value:"Scheduler",id:"scheduler",level:3},{value:"Controller Manager",id:"controller-manager",level:3},{value:"Worker Node Components",id:"worker-node-components",level:2},{value:"Kubelet",id:"kubelet",level:3},{value:"Kube Proxy",id:"kube-proxy",level:3},{value:"Pods",id:"pods",level:3},{value:"kubectl",id:"kubectl",level:2}];function c(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",mermaid:"mermaid",p:"p",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"introduction",children:"Introduction"})}),"\n",(0,s.jsx)(n.p,{children:"Kubernetes, often abbreviated as K8s, is an open-source container orchestration platform designed to automate the deployment, scaling, and management of containerized applications. It was originally developed by Google and is now maintained by the Cloud Native Computing Foundation (CNCF). Kubernetes has become the standard for managing large-scale containerized environments because it abstracts away infrastructure complexities and provides a consistent way to operate applications across different environments."}),"\n",(0,s.jsx)(n.p,{children:"Kubernetes enables us to describe the desired state of applications using declarative configurations, and it continuously works to ensure that the actual state matches the desired state. This model makes applications resilient, portable, and highly scalable."}),"\n",(0,s.jsx)(n.h2,{id:"why-kubernetes",children:"Why Kubernetes"}),"\n",(0,s.jsx)(n.p,{children:"Kubernetes addresses the limitations of running containers manually or using simpler orchestrators. It provides:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Automated scheduling and placement of containers on nodes"}),"\n",(0,s.jsx)(n.li,{children:"Service discovery and networking across multiple containers"}),"\n",(0,s.jsx)(n.li,{children:"Self-healing by restarting or rescheduling failed containers"}),"\n",(0,s.jsx)(n.li,{children:"Horizontal scaling based on demand"}),"\n",(0,s.jsx)(n.li,{children:"Rolling updates and rollbacks for application upgrades"}),"\n",(0,s.jsx)(n.li,{children:"Persistent storage integration for stateful applications"}),"\n",(0,s.jsx)(n.li,{children:"Multi-cloud and hybrid-cloud deployment capabilities"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"kubernetes-architecture-overview",children:"Kubernetes Architecture Overview"}),"\n",(0,s.jsx)(n.p,{children:"Kubernetes follows a master-worker architecture. The master components form the control plane, which manages the cluster and makes decisions about scheduling, scaling, and maintaining the desired state. The worker nodes run the actual containerized applications."}),"\n",(0,s.jsx)("div",{style:{textAlign:"center"},children:(0,s.jsx)(n.mermaid,{value:"graph TD\n    subgraph Control Plane\n        A[API Server]\n        B[Scheduler]\n        C[Controller Manager]\n        D[etcd: Cluster State Store]\n    end\n\n    subgraph Worker Nodes\n        E[Kubelet]\n        F[Kube Proxy]\n        G[Containers in Pods]\n    end\n\n    A --\x3e D\n    B --\x3e E\n    C --\x3e E\n    A --\x3e E\n    E --\x3e G\n    F --\x3e G"})}),"\n",(0,s.jsx)(n.h2,{id:"control-plane-components",children:"Control Plane Components"}),"\n",(0,s.jsx)(n.h3,{id:"api-server",children:"API Server"}),"\n",(0,s.jsx)(n.p,{children:"The entry point for all cluster operations. It exposes the Kubernetes API, validates requests, and processes commands from users or other components."}),"\n",(0,s.jsx)(n.h3,{id:"etcd",children:"etcd"}),"\n",(0,s.jsx)(n.p,{children:"A distributed key-value store that stores the entire cluster state. It ensures strong consistency and serves as the source of truth for Kubernetes."}),"\n",(0,s.jsx)(n.h3,{id:"scheduler",children:"Scheduler"}),"\n",(0,s.jsx)(n.p,{children:"Assigns newly created pods to suitable nodes based on resource requirements, policies, and constraints. It ensures optimal distribution of workloads."}),"\n",(0,s.jsx)(n.h3,{id:"controller-manager",children:"Controller Manager"}),"\n",(0,s.jsx)(n.p,{children:"Runs various controllers that monitor the state of the cluster and take corrective action when the actual state diverges from the desired state. Examples include the replication controller and node controller."}),"\n",(0,s.jsx)(n.h2,{id:"worker-node-components",children:"Worker Node Components"}),"\n",(0,s.jsx)(n.h3,{id:"kubelet",children:"Kubelet"}),"\n",(0,s.jsx)(n.p,{children:"An agent running on each worker node. It ensures that containers are running as expected in pods. It communicates with the API server to receive instructions and reports back status."}),"\n",(0,s.jsx)(n.h3,{id:"kube-proxy",children:"Kube Proxy"}),"\n",(0,s.jsx)(n.p,{children:"Handles networking on worker nodes. It ensures that containers can communicate with each other and with services, implementing load balancing and network rules."}),"\n",(0,s.jsx)(n.h3,{id:"pods",children:"Pods"}),"\n",(0,s.jsx)(n.p,{children:"The smallest deployable unit in Kubernetes. A pod can contain one or more tightly coupled containers that share networking and storage."}),"\n",(0,s.jsx)(n.h2,{id:"kubectl",children:"kubectl"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"kubectl"})," is the primary command-line tool for interacting with Kubernetes clusters. It allows users to deploy applications, inspect resources, manage cluster components, and troubleshoot issues."]}),"\n",(0,s.jsxs)(n.p,{children:["Common ",(0,s.jsx)(n.code,{children:"kubectl"})," commands:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"kubectl get pods"})," \u2014 List all pods in the cluster"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"kubectl describe pod <pod-name>"})," \u2014 Show detailed information about a pod"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"kubectl apply -f <file.yaml>"})," \u2014 Apply configuration from a YAML file"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"kubectl logs <pod-name>"})," \u2014 View logs from a pod"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"kubectl exec -it <pod-name> -- /bin/sh"})," \u2014 Execute a shell inside a running pod"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"kubectl"})," communicates with the API server and is essential for cluster administration and day-to-day operations."]})]})}function u(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>a});var r=t(96540);const s={},i=r.createContext(s);function o(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);