"use strict";(self.webpackChunkimdeepmind=self.webpackChunkimdeepmind||[]).push([[8433],{92450:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>t,contentTitle:()=>d,default:()=>h,frontMatter:()=>c,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"frameworks-libraries/backend/fastapi/optimization","title":"Performance & Optimization","description":"FastAPI is designed for high performance, but optimizing your application requires understanding async/await, database interactions, caching, compression, and load testing. Below is a detailed breakdown of key optimization techniques.","source":"@site/docs/frameworks-libraries/backend/fastapi/optimization.md","sourceDirName":"frameworks-libraries/backend/fastapi","slug":"/frameworks-libraries/backend/fastapi/optimization","permalink":"/docs/frameworks-libraries/backend/fastapi/optimization","draft":false,"unlisted":false,"editUrl":"https://github.com/imdeepmind/imdeepmind.github.io/blob/main/docs/frameworks-libraries/backend/fastapi/optimization.md","tags":[],"version":"current","lastUpdatedBy":"Abhishek Chatterjee","lastUpdatedAt":1749212834000,"sidebarPosition":8,"frontMatter":{"sidebar_position":8},"sidebar":"tutorialSidebar","previous":{"title":"Advanced FastAPI Features","permalink":"/docs/frameworks-libraries/backend/fastapi/advanced-features"},"next":{"title":"Testing & Debugging","permalink":"/docs/frameworks-libraries/backend/fastapi/testing"}}');var a=n(74848),r=n(28453);const c={sidebar_position:8},d="Performance & Optimization",t={},l=[{value:"Async/Await in FastAPI (<code>async def</code> vs <code>def</code>)",id:"asyncawait-in-fastapi-async-def-vs-def",level:2},{value:"When to Use <code>async def</code> vs <code>def</code>",id:"when-to-use-async-def-vs-def",level:3},{value:"Example: Async vs Sync Endpoints",id:"example-async-vs-sync-endpoints",level:3},{value:"Using Async Databases (SQLAlchemy Async, Databases, etc.)",id:"using-async-databases-sqlalchemy-async-databases-etc",level:2},{value:"Why Async Databases?",id:"why-async-databases",level:3},{value:"(A) SQLAlchemy Async (1.4+)",id:"a-sqlalchemy-async-14",level:3},{value:"(B) <code>databases</code> Library (Simpler Async SQL)",id:"b-databases-library-simpler-async-sql",level:3},{value:"Caching Strategies (<code>redis</code>, <code>fastapi-cache</code>)",id:"caching-strategies-redis-fastapi-cache",level:2},{value:"Why Caching?",id:"why-caching",level:3},{value:"(A) Redis Caching",id:"a-redis-caching",level:3},{value:"(B) <code>fastapi-cache</code> (Automatic Caching)",id:"b-fastapi-cache-automatic-caching",level:3},{value:"Optimizing Response Time (Compression, Gzip)",id:"optimizing-response-time-compression-gzip",level:2},{value:"Why Compress Responses?",id:"why-compress-responses",level:3},{value:"(A) Enable Gzip Middleware",id:"a-enable-gzip-middleware",level:3},{value:"(B) Manual Compression (If Needed)",id:"b-manual-compression-if-needed",level:3},{value:"Load Testing with Locust or JMeter",id:"load-testing-with-locust-or-jmeter",level:2},{value:"Why Load Test?",id:"why-load-test",level:3},{value:"(A) Locust (Python-Based)",id:"a-locust-python-based",level:3},{value:"(B) JMeter (Java-Based)",id:"b-jmeter-java-based",level:3},{value:"Summary of Optimization Techniques",id:"summary-of-optimization-techniques",level:2},{value:"Final Recommendations",id:"final-recommendations",level:2}];function o(e){const s={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(s.header,{children:(0,a.jsx)(s.h1,{id:"performance--optimization",children:"Performance & Optimization"})}),"\n",(0,a.jsxs)(s.p,{children:["FastAPI is designed for ",(0,a.jsx)(s.strong,{children:"high performance"}),", but optimizing your application requires understanding ",(0,a.jsx)(s.strong,{children:"async/await, database interactions, caching, compression, and load testing"}),". Below is a ",(0,a.jsx)(s.strong,{children:"detailed breakdown"})," of key optimization techniques."]}),"\n",(0,a.jsxs)(s.h2,{id:"asyncawait-in-fastapi-async-def-vs-def",children:["Async/Await in FastAPI (",(0,a.jsx)(s.code,{children:"async def"})," vs ",(0,a.jsx)(s.code,{children:"def"}),")"]}),"\n",(0,a.jsxs)(s.h3,{id:"when-to-use-async-def-vs-def",children:["When to Use ",(0,a.jsx)(s.code,{children:"async def"})," vs ",(0,a.jsx)(s.code,{children:"def"})]}),"\n",(0,a.jsxs)(s.table,{children:[(0,a.jsx)(s.thead,{children:(0,a.jsxs)(s.tr,{children:[(0,a.jsx)(s.th,{}),(0,a.jsx)(s.th,{children:(0,a.jsx)(s.code,{children:"async def"})}),(0,a.jsx)(s.th,{children:(0,a.jsx)(s.code,{children:"def"})})]})}),(0,a.jsxs)(s.tbody,{children:[(0,a.jsxs)(s.tr,{children:[(0,a.jsx)(s.td,{children:(0,a.jsx)(s.strong,{children:"Use Case"})}),(0,a.jsx)(s.td,{children:"I/O-bound tasks (DB calls, API requests)"}),(0,a.jsx)(s.td,{children:"CPU-bound tasks (calculations, image processing)"})]}),(0,a.jsxs)(s.tr,{children:[(0,a.jsx)(s.td,{children:(0,a.jsx)(s.strong,{children:"Blocks Event Loop?"})}),(0,a.jsx)(s.td,{children:"No (yields control)"}),(0,a.jsx)(s.td,{children:"Yes (blocks until completion)"})]}),(0,a.jsxs)(s.tr,{children:[(0,a.jsx)(s.td,{children:(0,a.jsx)(s.strong,{children:"Performance Impact"})}),(0,a.jsx)(s.td,{children:"Better for concurrency"}),(0,a.jsx)(s.td,{children:"Worse for concurrency"})]})]})]}),"\n",(0,a.jsx)(s.h3,{id:"example-async-vs-sync-endpoints",children:"Example: Async vs Sync Endpoints"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-python",children:'from fastapi import FastAPI\nimport time\n\napp = FastAPI()\n\n# Async endpoint (non-blocking)\n@app.get("/async-endpoint")\nasync def async_example():\n    await some_io_task()  # Simulate DB call\n    return {"message": "Async response"}\n\n# Sync endpoint (blocking)\n@app.get("/sync-endpoint")\ndef sync_example():\n    time.sleep(1)  # Simulate CPU-bound task\n    return {"message": "Sync response"}\n'})}),"\n",(0,a.jsxs)(s.p,{children:[(0,a.jsx)(s.strong,{children:"Key Takeaways"}),":"]}),"\n",(0,a.jsxs)(s.ul,{children:["\n",(0,a.jsxs)(s.li,{children:["Use ",(0,a.jsx)(s.code,{children:"async def"})," for ",(0,a.jsx)(s.strong,{children:"I/O-bound"})," operations (DB, HTTP requests)."]}),"\n",(0,a.jsxs)(s.li,{children:["Use ",(0,a.jsx)(s.code,{children:"def"})," for ",(0,a.jsx)(s.strong,{children:"CPU-bound"})," tasks (but avoid long-running sync code)."]}),"\n"]}),"\n",(0,a.jsx)(s.h2,{id:"using-async-databases-sqlalchemy-async-databases-etc",children:"Using Async Databases (SQLAlchemy Async, Databases, etc.)"}),"\n",(0,a.jsx)(s.h3,{id:"why-async-databases",children:"Why Async Databases?"}),"\n",(0,a.jsxs)(s.ul,{children:["\n",(0,a.jsxs)(s.li,{children:["Avoid ",(0,a.jsx)(s.strong,{children:"blocking the event loop"})," during DB queries."]}),"\n",(0,a.jsxs)(s.li,{children:["Supports ",(0,a.jsx)(s.strong,{children:"high concurrency"})," (e.g., 10K+ requests/sec)."]}),"\n"]}),"\n",(0,a.jsx)(s.h3,{id:"a-sqlalchemy-async-14",children:"(A) SQLAlchemy Async (1.4+)"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-python",children:'from sqlalchemy.ext.asyncio import AsyncSession, create_async_engine\nfrom sqlalchemy.orm import sessionmaker\n\nASYNC_DB_URL = "postgresql+asyncpg://user:password@localhost/db"\nasync_engine = create_async_engine(ASYNC_DB_URL)\nAsyncSessionLocal = sessionmaker(async_engine, class_=AsyncSession)\n\n@app.get("/async-db")\nasync def get_async_data(db: AsyncSession = Depends(AsyncSessionLocal)):\n    result = await db.execute(select(User))\n    return result.scalars().all()\n'})}),"\n",(0,a.jsxs)(s.h3,{id:"b-databases-library-simpler-async-sql",children:["(B) ",(0,a.jsx)(s.code,{children:"databases"})," Library (Simpler Async SQL)"]}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-python",children:'from databases import Database\n\ndatabase = Database("postgresql://user:password@localhost/db")\n\n@app.on_event("startup")\nasync def startup():\n    await database.connect()\n\n@app.get("/databases-example")\nasync def read_db():\n    query = "SELECT * FROM users"\n    return await database.fetch_all(query)\n'})}),"\n",(0,a.jsxs)(s.p,{children:[(0,a.jsx)(s.strong,{children:"Async DB Drivers"}),":"]}),"\n",(0,a.jsxs)(s.table,{children:[(0,a.jsx)(s.thead,{children:(0,a.jsxs)(s.tr,{children:[(0,a.jsx)(s.th,{children:"Database"}),(0,a.jsx)(s.th,{children:"Async Library"})]})}),(0,a.jsxs)(s.tbody,{children:[(0,a.jsxs)(s.tr,{children:[(0,a.jsx)(s.td,{children:"PostgreSQL"}),(0,a.jsx)(s.td,{children:(0,a.jsx)(s.code,{children:"asyncpg"})})]}),(0,a.jsxs)(s.tr,{children:[(0,a.jsx)(s.td,{children:"MySQL"}),(0,a.jsx)(s.td,{children:(0,a.jsx)(s.code,{children:"aiomysql"})})]}),(0,a.jsxs)(s.tr,{children:[(0,a.jsx)(s.td,{children:"SQLite"}),(0,a.jsx)(s.td,{children:(0,a.jsx)(s.code,{children:"aiosqlite"})})]})]})]}),"\n",(0,a.jsxs)(s.h2,{id:"caching-strategies-redis-fastapi-cache",children:["Caching Strategies (",(0,a.jsx)(s.code,{children:"redis"}),", ",(0,a.jsx)(s.code,{children:"fastapi-cache"}),")"]}),"\n",(0,a.jsx)(s.h3,{id:"why-caching",children:"Why Caching?"}),"\n",(0,a.jsxs)(s.ul,{children:["\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.strong,{children:"Reduce DB load"})," (cache frequent queries)."]}),"\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.strong,{children:"Speed up responses"})," (avoid recomputation)."]}),"\n"]}),"\n",(0,a.jsx)(s.h3,{id:"a-redis-caching",children:"(A) Redis Caching"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-python",children:'import redis\n\n# Sync Redis\nr = redis.Redis(host="localhost", port=6379)\n\n@app.get("/cached-data")\ndef get_data(key: str):\n    cached = r.get(key)\n    if cached:\n        return {"data": cached.decode()}\n    data = expensive_operation()  # Fetch from DB\n    r.setex(key, 3600, data)  # Cache for 1 hour\n    return {"data": data}\n'})}),"\n",(0,a.jsxs)(s.h3,{id:"b-fastapi-cache-automatic-caching",children:["(B) ",(0,a.jsx)(s.code,{children:"fastapi-cache"})," (Automatic Caching)"]}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-python",children:'from fastapi_cache import FastAPICache\nfrom fastapi_cache.backends.redis import RedisBackend\nfrom fastapi_cache.decorator import cache\n\nFastAPICache.init(RedisBackend(redis), prefix="fastapi-cache")\n\n@app.get("/auto-cached")\n@cache(expire=60)  # Cache for 60 seconds\nasync def get_cached_data():\n    return {"message": "This response is cached!"}\n'})}),"\n",(0,a.jsxs)(s.p,{children:[(0,a.jsx)(s.strong,{children:"Cache Backends"}),":"]}),"\n",(0,a.jsxs)(s.ul,{children:["\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.strong,{children:"Redis"})," (recommended for production)"]}),"\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.strong,{children:"In-memory"})," (for testing)"]}),"\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.strong,{children:"Memcached"})," (alternative to Redis)"]}),"\n"]}),"\n",(0,a.jsx)(s.h2,{id:"optimizing-response-time-compression-gzip",children:"Optimizing Response Time (Compression, Gzip)"}),"\n",(0,a.jsx)(s.h3,{id:"why-compress-responses",children:"Why Compress Responses?"}),"\n",(0,a.jsxs)(s.ul,{children:["\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.strong,{children:"Reduces bandwidth"})," (faster transfers)."]}),"\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.strong,{children:"Improves perceived performance"}),"."]}),"\n"]}),"\n",(0,a.jsx)(s.h3,{id:"a-enable-gzip-middleware",children:"(A) Enable Gzip Middleware"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-python",children:"from fastapi.middleware.gzip import GZipMiddleware\n\napp = FastAPI()\napp.add_middleware(GZipMiddleware, minimum_size=1000)  # Compress responses >1KB\n"})}),"\n",(0,a.jsx)(s.h3,{id:"b-manual-compression-if-needed",children:"(B) Manual Compression (If Needed)"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-python",children:'import gzip\n\n@app.get("/compressed-data")\nasync def get_compressed_data():\n    data = {"key": "value"}\n    compressed = gzip.compress(json.dumps(data).encode())\n    return Response(content=compressed, media_type="application/gzip")\n'})}),"\n",(0,a.jsxs)(s.p,{children:[(0,a.jsx)(s.strong,{children:"Best Practices"}),":"]}),"\n",(0,a.jsxs)(s.ul,{children:["\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.strong,{children:"Avoid compressing tiny responses"})," (overhead > benefit)."]}),"\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.strong,{children:"Use CDN compression"})," (e.g., Cloudflare, AWS CloudFront)."]}),"\n"]}),"\n",(0,a.jsx)(s.h2,{id:"load-testing-with-locust-or-jmeter",children:"Load Testing with Locust or JMeter"}),"\n",(0,a.jsx)(s.h3,{id:"why-load-test",children:"Why Load Test?"}),"\n",(0,a.jsxs)(s.ul,{children:["\n",(0,a.jsxs)(s.li,{children:["Identify ",(0,a.jsx)(s.strong,{children:"bottlenecks"})," (DB, CPU, memory)."]}),"\n",(0,a.jsxs)(s.li,{children:["Measure ",(0,a.jsx)(s.strong,{children:"max requests/sec"})," before failure."]}),"\n"]}),"\n",(0,a.jsx)(s.h3,{id:"a-locust-python-based",children:"(A) Locust (Python-Based)"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-python",children:'# locustfile.py\nfrom locust import HttpUser, task\n\nclass FastAPIUser(HttpUser):\n    @task\n    def load_test(self):\n        self.client.get("/endpoint")\n'})}),"\n",(0,a.jsxs)(s.p,{children:[(0,a.jsx)(s.strong,{children:"Run Locust"}),":"]}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-bash",children:"locust -f locustfile.py\n"})}),"\n",(0,a.jsxs)(s.ul,{children:["\n",(0,a.jsxs)(s.li,{children:["Open ",(0,a.jsx)(s.code,{children:"http://localhost:8089"})," to simulate traffic."]}),"\n"]}),"\n",(0,a.jsx)(s.h3,{id:"b-jmeter-java-based",children:"(B) JMeter (Java-Based)"}),"\n",(0,a.jsxs)(s.ul,{children:["\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.strong,{children:"GUI-based"})," load testing."]}),"\n",(0,a.jsxs)(s.li,{children:["Supports ",(0,a.jsx)(s.strong,{children:"complex workflows"})," (e.g., login \u2192 API calls)."]}),"\n"]}),"\n",(0,a.jsxs)(s.p,{children:[(0,a.jsx)(s.strong,{children:"Key Metrics to Monitor"}),":"]}),"\n",(0,a.jsxs)(s.table,{children:[(0,a.jsx)(s.thead,{children:(0,a.jsxs)(s.tr,{children:[(0,a.jsx)(s.th,{children:"Metric"}),(0,a.jsx)(s.th,{children:"Target"})]})}),(0,a.jsxs)(s.tbody,{children:[(0,a.jsxs)(s.tr,{children:[(0,a.jsx)(s.td,{children:(0,a.jsx)(s.strong,{children:"Requests/sec"})}),(0,a.jsx)(s.td,{children:"\u22651000 (for high-traffic APIs)"})]}),(0,a.jsxs)(s.tr,{children:[(0,a.jsx)(s.td,{children:(0,a.jsx)(s.strong,{children:"95th % Latency"})}),(0,a.jsx)(s.td,{children:"< 600 ms"})]}),(0,a.jsxs)(s.tr,{children:[(0,a.jsx)(s.td,{children:(0,a.jsx)(s.strong,{children:"Error Rate"})}),(0,a.jsx)(s.td,{children:"< 1 %"})]})]})]}),"\n",(0,a.jsx)(s.h2,{id:"summary-of-optimization-techniques",children:"Summary of Optimization Techniques"}),"\n",(0,a.jsxs)(s.table,{children:[(0,a.jsx)(s.thead,{children:(0,a.jsxs)(s.tr,{children:[(0,a.jsx)(s.th,{children:"Technique"}),(0,a.jsx)(s.th,{children:"Tools/Libraries"}),(0,a.jsx)(s.th,{children:"Impact"})]})}),(0,a.jsxs)(s.tbody,{children:[(0,a.jsxs)(s.tr,{children:[(0,a.jsx)(s.td,{children:(0,a.jsx)(s.strong,{children:"Async/Await"})}),(0,a.jsxs)(s.td,{children:[(0,a.jsx)(s.code,{children:"async def"}),", ",(0,a.jsx)(s.code,{children:"await"})]}),(0,a.jsx)(s.td,{children:"\u2b50\u2b50\u2b50 (High concurrency)"})]}),(0,a.jsxs)(s.tr,{children:[(0,a.jsx)(s.td,{children:(0,a.jsx)(s.strong,{children:"Async DBs"})}),(0,a.jsxs)(s.td,{children:["SQLAlchemy async, ",(0,a.jsx)(s.code,{children:"databases"})]}),(0,a.jsx)(s.td,{children:"\u2b50\u2b50\u2b50 (No DB bottlenecks)"})]}),(0,a.jsxs)(s.tr,{children:[(0,a.jsx)(s.td,{children:(0,a.jsx)(s.strong,{children:"Caching"})}),(0,a.jsxs)(s.td,{children:["Redis, ",(0,a.jsx)(s.code,{children:"fastapi-cache"})]}),(0,a.jsx)(s.td,{children:"\u2b50\u2b50 (Reduces DB load)"})]}),(0,a.jsxs)(s.tr,{children:[(0,a.jsx)(s.td,{children:(0,a.jsx)(s.strong,{children:"Compression"})}),(0,a.jsx)(s.td,{children:"GzipMiddleware"}),(0,a.jsx)(s.td,{children:"\u2b50 (Faster transfers)"})]}),(0,a.jsxs)(s.tr,{children:[(0,a.jsx)(s.td,{children:(0,a.jsx)(s.strong,{children:"Load Testing"})}),(0,a.jsx)(s.td,{children:"Locust, JMeter"}),(0,a.jsx)(s.td,{children:"\u2b50\u2b50\u2b50 (Identifies bottlenecks)"})]})]})]}),"\n",(0,a.jsx)(s.h2,{id:"final-recommendations",children:"Final Recommendations"}),"\n",(0,a.jsxs)(s.ol,{children:["\n",(0,a.jsxs)(s.li,{children:[(0,a.jsxs)(s.strong,{children:["Always use ",(0,a.jsx)(s.code,{children:"async def"})," for I/O-bound routes"]}),"."]}),"\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.strong,{children:"Cache aggressively"})," (Redis + ",(0,a.jsx)(s.code,{children:"fastapi-cache"}),")."]}),"\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.strong,{children:"Enable Gzip for JSON/HTML responses"}),"."]}),"\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.strong,{children:"Load test before deployment"})," (simulate real traffic)."]}),"\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.strong,{children:"Monitor performance"})," (Prometheus, Grafana)."]}),"\n"]})]})}function h(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,a.jsx)(s,{...e,children:(0,a.jsx)(o,{...e})}):o(e)}},28453:(e,s,n)=>{n.d(s,{R:()=>c,x:()=>d});var i=n(96540);const a={},r=i.createContext(a);function c(e){const s=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function d(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:c(e.components),i.createElement(r.Provider,{value:s},e.children)}}}]);