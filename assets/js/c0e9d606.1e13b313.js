"use strict";(self.webpackChunkimdeepmind=self.webpackChunkimdeepmind||[]).push([[7660],{8697:(e,s,i)=>{i.r(s),i.d(s,{assets:()=>c,contentTitle:()=>d,default:()=>h,frontMatter:()=>t,metadata:()=>n,toc:()=>o});const n=JSON.parse('{"id":"system-design/distributed-system-communication/sns","title":"AWS SNS","description":"Amazon Simple Notification Service (SNS) is a fully managed messaging service provided by AWS that enables the decoupling of microservices, distributed systems, and serverless applications through a publish-subscribe (pub/sub) messaging pattern. It is primarily used for sending notifications in real-time to multiple subscribers over different protocols.","source":"@site/docs/system-design/distributed-system-communication/sns.md","sourceDirName":"system-design/distributed-system-communication","slug":"/system-design/distributed-system-communication/sns","permalink":"/docs/system-design/distributed-system-communication/sns","draft":false,"unlisted":false,"editUrl":"https://github.com/imdeepmind/imdeepmind.github.io/blob/main/docs/system-design/distributed-system-communication/sns.md","tags":[],"version":"current","lastUpdatedBy":"Abhishek Chatterjee","lastUpdatedAt":1736349817000,"sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"AWS SQS","permalink":"/docs/system-design/distributed-system-communication/sqs"},"next":{"title":"RabbitMQ","permalink":"/docs/system-design/distributed-system-communication/rabbit-mq"}}');var r=i(74848),l=i(28453);const t={sidebar_position:3},d="AWS SNS",c={},o=[{value:"Key Features of SNS",id:"key-features-of-sns",level:2},{value:"Publish-Subscribe (Pub/Sub) Model",id:"publish-subscribe-pubsub-model",level:3},{value:"Push-Based Delivery",id:"push-based-delivery",level:3},{value:"Multiple Protocols for Delivery",id:"multiple-protocols-for-delivery",level:3},{value:"Message Filtering",id:"message-filtering",level:3},{value:"High Throughput and Scalability",id:"high-throughput-and-scalability",level:3},{value:"Durability and Reliability",id:"durability-and-reliability",level:3},{value:"Security",id:"security",level:3},{value:"Dead-Letter Queues (DLQs)",id:"dead-letter-queues-dlqs",level:3},{value:"Monitoring and Metrics",id:"monitoring-and-metrics",level:3},{value:"Key Concepts",id:"key-concepts",level:2},{value:"Topic",id:"topic",level:3},{value:"Publisher",id:"publisher",level:3},{value:"Subscriber",id:"subscriber",level:3},{value:"Subscription",id:"subscription",level:3},{value:"How SNS Works",id:"how-sns-works",level:2},{value:"Use Cases",id:"use-cases",level:2},{value:"Benefits",id:"benefits",level:2},{value:"Limitations",id:"limitations",level:2},{value:"SNS vs. Other Messaging Services",id:"sns-vs-other-messaging-services",level:2},{value:"Example Scenario",id:"example-scenario",level:2}];function a(e){const s={h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,l.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(s.header,{children:(0,r.jsx)(s.h1,{id:"aws-sns",children:"AWS SNS"})}),"\n",(0,r.jsxs)(s.p,{children:["Amazon Simple Notification Service (SNS) is a fully managed messaging service provided by AWS that enables the decoupling of microservices, distributed systems, and serverless applications through a ",(0,r.jsx)(s.strong,{children:"publish-subscribe (pub/sub)"})," messaging pattern. It is primarily used for sending notifications in real-time to multiple subscribers over different protocols."]}),"\n",(0,r.jsx)(s.h2,{id:"key-features-of-sns",children:"Key Features of SNS"}),"\n",(0,r.jsx)(s.h3,{id:"publish-subscribe-pubsub-model",children:"Publish-Subscribe (Pub/Sub) Model"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:["SNS allows ",(0,r.jsx)(s.strong,{children:"publishers"})," to send messages to an ",(0,r.jsx)(s.strong,{children:"SNS topic"}),"."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Subscribers"})," (endpoints such as SQS, Lambda functions, HTTP endpoints, email addresses, etc.) can subscribe to these topics to receive the messages."]}),"\n",(0,r.jsxs)(s.li,{children:["The ",(0,r.jsx)(s.strong,{children:"fan-out pattern"})," enables sending a single message to multiple subscribers."]}),"\n"]}),"\n",(0,r.jsx)(s.h3,{id:"push-based-delivery",children:"Push-Based Delivery"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:"SNS delivers messages in a push-based manner, meaning subscribers receive messages automatically without needing to poll for updates."}),"\n"]}),"\n",(0,r.jsx)(s.h3,{id:"multiple-protocols-for-delivery",children:"Multiple Protocols for Delivery"}),"\n",(0,r.jsx)(s.p,{children:"SNS supports the following protocols for message delivery:"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"HTTP/HTTPS"}),": Delivers messages to HTTP/HTTPS endpoints."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"AWS Lambda"}),": Invokes Lambda functions to process messages."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Amazon SQS"}),": Delivers messages to SQS queues for further processing."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Email/Email-JSON"}),": Sends messages as emails."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"SMS"}),": Sends text messages to phone numbers."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Mobile Push Notifications"}),": Integrates with services like Apple Push Notification Service (APNs) and Firebase Cloud Messaging (FCM)."]}),"\n"]}),"\n",(0,r.jsx)(s.h3,{id:"message-filtering",children:"Message Filtering"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:["Subscribers can apply ",(0,r.jsx)(s.strong,{children:"message filtering"})," using subscription filters, enabling them to receive only messages that meet specific criteria. This reduces unnecessary processing of irrelevant messages."]}),"\n"]}),"\n",(0,r.jsx)(s.h3,{id:"high-throughput-and-scalability",children:"High Throughput and Scalability"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:"SNS automatically scales to handle a large number of messages and high throughput."}),"\n",(0,r.jsx)(s.li,{children:"It is a serverless service, so there\u2019s no infrastructure to manage."}),"\n"]}),"\n",(0,r.jsx)(s.h3,{id:"durability-and-reliability",children:"Durability and Reliability"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:"Messages are stored redundantly across multiple Availability Zones to ensure durability."}),"\n",(0,r.jsx)(s.li,{children:"For critical use cases, SNS can deliver messages to SQS queues, ensuring persistence and retries."}),"\n"]}),"\n",(0,r.jsx)(s.h3,{id:"security",children:"Security"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:"Messages are encrypted in transit using HTTPS."}),"\n",(0,r.jsxs)(s.li,{children:["SNS supports integration with ",(0,r.jsx)(s.strong,{children:"AWS Identity and Access Management (IAM)"})," to control access to topics."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Message encryption"})," can also be enabled using AWS Key Management Service (KMS)."]}),"\n"]}),"\n",(0,r.jsx)(s.h3,{id:"dead-letter-queues-dlqs",children:"Dead-Letter Queues (DLQs)"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:"SNS can route undelivered messages to an Amazon SQS Dead-Letter Queue (DLQ), enabling you to analyze and troubleshoot failed deliveries."}),"\n"]}),"\n",(0,r.jsx)(s.h3,{id:"monitoring-and-metrics",children:"Monitoring and Metrics"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:["SNS integrates with ",(0,r.jsx)(s.strong,{children:"Amazon CloudWatch"})," to provide detailed metrics such as the number of messages published, delivered, and failed, as well as subscription-related metrics."]}),"\n"]}),"\n",(0,r.jsx)(s.h2,{id:"key-concepts",children:"Key Concepts"}),"\n",(0,r.jsx)(s.h3,{id:"topic",children:"Topic"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:"A topic is a logical access point for publishing messages."}),"\n",(0,r.jsx)(s.li,{children:"Publishers send messages to a topic, and subscribers receive them based on their subscription."}),"\n"]}),"\n",(0,r.jsx)(s.h3,{id:"publisher",children:"Publisher"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:"The system or service that sends messages to the SNS topic."}),"\n"]}),"\n",(0,r.jsx)(s.h3,{id:"subscriber",children:"Subscriber"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:"The endpoint (e.g., SQS queue, Lambda function, HTTP endpoint) that receives messages from the topic."}),"\n"]}),"\n",(0,r.jsx)(s.h3,{id:"subscription",children:"Subscription"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:"A subscription defines the association between a topic and a subscriber. Each subscription specifies the protocol and endpoint for message delivery."}),"\n"]}),"\n",(0,r.jsx)(s.h2,{id:"how-sns-works",children:"How SNS Works"}),"\n",(0,r.jsxs)(s.ol,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Publisher"}),": A message is sent by the publisher to an SNS topic."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Topic"}),": The topic fans out the message to all its subscribers."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Subscriber"}),": Subscribers receive the message via their configured protocol."]}),"\n"]}),"\n",(0,r.jsx)(s.h2,{id:"use-cases",children:"Use Cases"}),"\n",(0,r.jsxs)(s.ol,{children:["\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.strong,{children:"Real-Time Notifications"})}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:"Sending alerts to end-users or services in real-time, e.g., application monitoring alerts."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.strong,{children:"Fan-Out Architecture"})}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:"Distributing a single message to multiple services or microservices, e.g., when a new user registers, notify multiple downstream services such as billing, CRM, and analytics."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.strong,{children:"Decoupling Microservices"})}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:"SNS topics allow loosely coupled communication between microservices by abstracting the messaging system."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.strong,{children:"Mobile Push Notifications"})}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:"Sending notifications to mobile devices through platforms like Firebase Cloud Messaging (FCM) and Apple Push Notification Service (APNs)."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.strong,{children:"Workflow Coordination"})}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:"SNS can trigger AWS Lambda functions, making it ideal for serverless workflows."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(s.h2,{id:"benefits",children:"Benefits"}),"\n",(0,r.jsxs)(s.ol,{children:["\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.strong,{children:"Scalability"})}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:"Fully managed and highly scalable to support high message volumes."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.strong,{children:"Reduced Complexity"})}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:"Simplifies pub/sub messaging without the need to manage servers or message brokers."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.strong,{children:"Flexibility"})}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:"Supports multiple protocols, enabling diverse use cases like notifications, message processing, or system alerts."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.strong,{children:"Cost-Effective"})}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:"Pay only for the number of messages published and delivered."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.strong,{children:"Integration with AWS Ecosystem"})}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:"Deep integration with other AWS services such as SQS, Lambda, CloudWatch, and KMS."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(s.h2,{id:"limitations",children:"Limitations"}),"\n",(0,r.jsxs)(s.ol,{children:["\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.strong,{children:"No Message Persistence"})}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:"Messages are not stored permanently; once delivered, they are removed."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.strong,{children:"No Message Replay"})}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:"Subscribers cannot retrieve messages that have already been delivered."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.strong,{children:"Ordering Guarantees"})}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:"SNS does not guarantee the order in which subscribers receive messages."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.strong,{children:"Limited Protocols"})}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:"While it supports several protocols, it doesn\u2019t directly support streaming protocols like Kafka."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(s.h2,{id:"sns-vs-other-messaging-services",children:"SNS vs. Other Messaging Services"}),"\n",(0,r.jsxs)(s.table,{children:[(0,r.jsx)(s.thead,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.th,{children:"Feature"}),(0,r.jsx)(s.th,{children:(0,r.jsx)(s.strong,{children:"SNS"})}),(0,r.jsx)(s.th,{children:(0,r.jsx)(s.strong,{children:"SQS"})}),(0,r.jsx)(s.th,{children:(0,r.jsx)(s.strong,{children:"Kafka"})})]})}),(0,r.jsxs)(s.tbody,{children:[(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.strong,{children:"Type"})}),(0,r.jsx)(s.td,{children:"Pub/Sub"}),(0,r.jsx)(s.td,{children:"Queue"}),(0,r.jsx)(s.td,{children:"Event Streaming"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.strong,{children:"Delivery Model"})}),(0,r.jsx)(s.td,{children:"Push"}),(0,r.jsx)(s.td,{children:"Pull"}),(0,r.jsx)(s.td,{children:"Pull"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.strong,{children:"Message Persistence"})}),(0,r.jsx)(s.td,{children:"No"}),(0,r.jsx)(s.td,{children:"Temporary (up to 14 days)"}),(0,r.jsx)(s.td,{children:"Persistent"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.strong,{children:"Message Replay"})}),(0,r.jsx)(s.td,{children:"No"}),(0,r.jsx)(s.td,{children:"No"}),(0,r.jsx)(s.td,{children:"Yes"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.strong,{children:"Ordering Guarantees"})}),(0,r.jsx)(s.td,{children:"No"}),(0,r.jsx)(s.td,{children:"FIFO available"}),(0,r.jsx)(s.td,{children:"Per-partition ordering"})]})]})]}),"\n",(0,r.jsx)(s.h2,{id:"example-scenario",children:"Example Scenario"}),"\n",(0,r.jsx)(s.p,{children:"Imagine an e-commerce platform where:"}),"\n",(0,r.jsxs)(s.ol,{children:["\n",(0,r.jsxs)(s.li,{children:["An ",(0,r.jsx)(s.strong,{children:"order service"})," publishes an order event to an SNS topic when a new order is created."]}),"\n",(0,r.jsxs)(s.li,{children:["Subscribers like:","\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:["An ",(0,r.jsx)(s.strong,{children:"email service"})," sends confirmation emails."]}),"\n",(0,r.jsxs)(s.li,{children:["A ",(0,r.jsx)(s.strong,{children:"warehouse system"})," updates inventory."]}),"\n",(0,r.jsxs)(s.li,{children:["A ",(0,r.jsx)(s.strong,{children:"billing service"})," generates invoices."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(s.p,{children:"By using SNS, these systems remain decoupled and independent of each other, improving maintainability and scalability."})]})}function h(e={}){const{wrapper:s}={...(0,l.R)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}},28453:(e,s,i)=>{i.d(s,{R:()=>t,x:()=>d});var n=i(96540);const r={},l=n.createContext(r);function t(e){const s=n.useContext(l);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function d(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:t(e.components),n.createElement(l.Provider,{value:s},e.children)}}}]);