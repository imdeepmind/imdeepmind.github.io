"use strict";(self.webpackChunkimdeepmind=self.webpackChunkimdeepmind||[]).push([[4812],{13766:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>p,frontMatter:()=>r,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"frameworks-libraries/backend/fastapi/dependency-injection","title":"Dependency Injection","description":"Dependency Injection (DI) is a design pattern used to decouple components by injecting dependencies (like functions, classes, or objects) rather than hardcoding them. FastAPI has first-class support for DI, making it easy to manage dependencies cleanly and efficiently.","source":"@site/docs/frameworks-libraries/backend/fastapi/dependency-injection.md","sourceDirName":"frameworks-libraries/backend/fastapi","slug":"/frameworks-libraries/backend/fastapi/dependency-injection","permalink":"/docs/frameworks-libraries/backend/fastapi/dependency-injection","draft":false,"unlisted":false,"editUrl":"https://github.com/imdeepmind/imdeepmind.github.io/blob/main/docs/frameworks-libraries/backend/fastapi/dependency-injection.md","tags":[],"version":"current","lastUpdatedBy":"Abhishek Chatterjee","lastUpdatedAt":1749212834000,"sidebarPosition":4,"frontMatter":{"sidebar_position":4},"sidebar":"tutorialSidebar","previous":{"title":"Serialization and Validation","permalink":"/docs/frameworks-libraries/backend/fastapi/serialization-validation"},"next":{"title":"Authentication & Security","permalink":"/docs/frameworks-libraries/backend/fastapi/auth"}}');var t=s(74848),d=s(28453);const r={sidebar_position:4},a="Dependency Injection",c={},l=[{value:"What is Dependency Injection (DI) &amp; Why It&#39;s Useful",id:"what-is-dependency-injection-di--why-its-useful",level:2},{value:"Why Use DI?",id:"why-use-di",level:3},{value:"Basic DI (<code>Depends(get_db)</code>)",id:"basic-di-dependsget_db",level:2},{value:"Example: Database Session Dependency",id:"example-database-session-dependency",level:3},{value:"Function-Based vs Class-Based Dependencies",id:"function-based-vs-class-based-dependencies",level:2},{value:"Function-Based Dependencies",id:"function-based-dependencies",level:3},{value:"Class-Based Dependencies",id:"class-based-dependencies",level:3},{value:"Dependency Scopes (Singleton, Request, etc.)",id:"dependency-scopes-singleton-request-etc",level:2},{value:"Example: Singleton vs Request-Scoped",id:"example-singleton-vs-request-scoped",level:3},{value:"Overriding Dependencies for Testing",id:"overriding-dependencies-for-testing",level:2},{value:"Example: Mocking Authentication in Tests",id:"example-mocking-authentication-in-tests",level:3},{value:"Using Dependencies for Authentication, DB Sessions, etc.",id:"using-dependencies-for-authentication-db-sessions-etc",level:2},{value:"Example: Role-Based Access Control (RBAC)",id:"example-role-based-access-control-rbac",level:3},{value:"Example: Database Session Management",id:"example-database-session-management",level:3}];function o(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,d.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"dependency-injection",children:"Dependency Injection"})}),"\n",(0,t.jsxs)(n.p,{children:["Dependency Injection (DI) is a ",(0,t.jsx)(n.strong,{children:"design pattern"})," used to decouple components by ",(0,t.jsx)(n.strong,{children:"injecting dependencies"})," (like functions, classes, or objects) rather than hardcoding them. FastAPI has ",(0,t.jsx)(n.strong,{children:"first-class support"})," for DI, making it easy to manage dependencies cleanly and efficiently."]}),"\n",(0,t.jsx)(n.h2,{id:"what-is-dependency-injection-di--why-its-useful",children:"What is Dependency Injection (DI) & Why It's Useful"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"DI is a technique where an object receives its dependencies from an external source rather than creating them itself."}),"\n",(0,t.jsxs)(n.li,{children:["In FastAPI, dependencies are declared using ",(0,t.jsx)(n.code,{children:"Depends()"})," and can be ",(0,t.jsx)(n.strong,{children:"functions, classes, or even other dependencies"}),"."]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"why-use-di",children:"Why Use DI?"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Decoupling"}),": Components remain independent, making the code modular."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Reusability"}),": The same dependency can be used across multiple routes."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Testability"}),": Easily mock dependencies for unit testing."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Cleaner Code"}),": Avoids repetitive initialization logic (e.g., DB sessions, auth checks)."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Dependency Scopes"}),": Control how long a dependency lives (per-request, singleton, etc.)."]}),"\n"]}),"\n",(0,t.jsxs)(n.h2,{id:"basic-di-dependsget_db",children:["Basic DI (",(0,t.jsx)(n.code,{children:"Depends(get_db)"}),")"]}),"\n",(0,t.jsxs)(n.p,{children:["FastAPI\u2019s ",(0,t.jsx)(n.code,{children:"Depends()"})," is used to declare dependencies. A simple example:"]}),"\n",(0,t.jsx)(n.h3,{id:"example-database-session-dependency",children:"Example: Database Session Dependency"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'from fastapi import Depends, FastAPI\nfrom sqlalchemy.orm import Session\n\napp = FastAPI()\n\n# Dependency function\ndef get_db():\n    db = SessionLocal()  # Assume SessionLocal is defined\n    try:\n        yield db\n    finally:\n        db.close()\n\n# Using the dependency in a route\n@app.get("/items/")\ndef read_items(db: Session = Depends(get_db)):\n    items = db.query(Item).all()\n    return items\n'})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"get_db()"})," ",(0,t.jsx)(n.strong,{children:"yields"})," a database session."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"Depends(get_db)"})," injects the session into the route."]}),"\n",(0,t.jsx)(n.li,{children:"The session is automatically closed after the request."}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"function-based-vs-class-based-dependencies",children:"Function-Based vs Class-Based Dependencies"}),"\n",(0,t.jsxs)(n.p,{children:["Dependencies can be ",(0,t.jsx)(n.strong,{children:"functions"})," or ",(0,t.jsx)(n.strong,{children:"classes"}),", each with different use cases."]}),"\n",(0,t.jsx)(n.h3,{id:"function-based-dependencies",children:"Function-Based Dependencies"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Simple, lightweight."}),"\n",(0,t.jsx)(n.li,{children:"Best for stateless operations (e.g., fetching a DB session)."}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'def get_current_user(token: str = Depends(oauth2_scheme)):\n    user = decode_token(token)\n    return user\n\n@app.get("/me")\ndef read_me(user: str = Depends(get_current_user)):\n    return {"user": user}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"class-based-dependencies",children:"Class-Based Dependencies"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Useful when dependencies need ",(0,t.jsx)(n.strong,{children:"state or configuration"}),"."]}),"\n",(0,t.jsx)(n.li,{children:"Can be initialized with parameters."}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'class Pagination:\n    def __init__(self, max_limit: int = 100):\n        self.max_limit = max_limit\n\n    def __call__(self, skip: int = 0, limit: int = 10):\n        return {"skip": skip, "limit": min(limit, self.max_limit)}\n\npagination = Pagination(max_limit=50)  # Configured dependency\n\n@app.get("/items/")\ndef read_items(pagination_params: dict = Depends(pagination)):\n    return pagination_params\n'})}),"\n",(0,t.jsx)(n.h2,{id:"dependency-scopes-singleton-request-etc",children:"Dependency Scopes (Singleton, Request, etc.)"}),"\n",(0,t.jsxs)(n.p,{children:["Dependencies can have different ",(0,t.jsx)(n.strong,{children:"lifetimes"})," (scopes):"]}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Scope"}),(0,t.jsx)(n.th,{children:"Behavior"}),(0,t.jsx)(n.th,{children:"Use Case"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Singleton"})}),(0,t.jsx)(n.td,{children:"Created once, reused forever."}),(0,t.jsx)(n.td,{children:"Database connection pools, configs."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Request"})}),(0,t.jsx)(n.td,{children:"Created per request, cleaned up after."}),(0,t.jsx)(n.td,{children:"DB sessions, auth checks."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Transient"})}),(0,t.jsx)(n.td,{children:"Created every time it's needed."}),(0,t.jsx)(n.td,{children:"Rare, used for stateless utilities."})]})]})]}),"\n",(0,t.jsx)(n.h3,{id:"example-singleton-vs-request-scoped",children:"Example: Singleton vs Request-Scoped"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'from fastapi import Depends, FastAPI\n\napp = FastAPI()\n\n# Singleton (initialized once)\ndef get_config():\n    return {"env": "prod"}\n\n# Request-scoped (new per request)\ndef get_db_session():\n    db = SessionLocal()\n    try:\n        yield db\n    finally:\n        db.close()\n\n@app.get("/data")\ndef get_data(\n    config: dict = Depends(get_config),  # Singleton\n    db: Session = Depends(get_db_session)  # Request-scoped\n):\n    return {"config": config, "db": db}\n'})}),"\n",(0,t.jsx)(n.h2,{id:"overriding-dependencies-for-testing",children:"Overriding Dependencies for Testing"}),"\n",(0,t.jsxs)(n.p,{children:["FastAPI allows ",(0,t.jsx)(n.strong,{children:"overriding dependencies"})," in tests, making it easy to mock external services."]}),"\n",(0,t.jsx)(n.h3,{id:"example-mocking-authentication-in-tests",children:"Example: Mocking Authentication in Tests"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'from fastapi.testclient import TestClient\nfrom main import app, get_current_user\n\nclient = TestClient(app)\n\n# Original dependency (requires real auth)\ndef get_current_user(token: str = Depends(oauth2_scheme)):\n    return authenticate(token)\n\n# Test override (bypasses auth)\ndef mock_get_current_user():\n    return {"user": "test_user"}\n\n# Apply override\napp.dependency_overrides[get_current_user] = mock_get_current_user\n\n# Test runs with mock\ndef test_read_me():\n    response = client.get("/me")\n    assert response.json() == {"user": "test_user"}\n\n# Revert after test\napp.dependency_overrides.clear()\n'})}),"\n",(0,t.jsx)(n.h2,{id:"using-dependencies-for-authentication-db-sessions-etc",children:"Using Dependencies for Authentication, DB Sessions, etc."}),"\n",(0,t.jsx)(n.p,{children:"Dependencies are commonly used for:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Authentication"})," (JWT, OAuth2)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Database sessions"})," (SQLAlchemy, async DBs)"]}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.strong,{children:"Rate limiting"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.strong,{children:"Request validation"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.strong,{children:"Logging & monitoring"})}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"example-role-based-access-control-rbac",children:"Example: Role-Based Access Control (RBAC)"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'from fastapi import Depends, HTTPException, status\n\ndef get_current_user(token: str = Depends(oauth2_scheme)):\n    return decode_token(token)\n\ndef require_admin(user: dict = Depends(get_current_user)):\n    if user.get("role") != "admin":\n        raise HTTPException(status_code=403, detail="Admins only")\n    return user\n\n@app.get("/admin")\ndef admin_dashboard(user: dict = Depends(require_admin)):\n    return {"message": "Welcome, admin!"}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"example-database-session-management",children:"Example: Database Session Management"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'from sqlalchemy.orm import Session\n\ndef get_db():\n    db = SessionLocal()\n    try:\n        yield db\n    finally:\n        db.close()\n\n@app.post("/items/")\ndef create_item(item: ItemCreate, db: Session = Depends(get_db)):\n    db_item = Item(**item.dict())\n    db.add(db_item)\n    db.commit()\n    return db_item\n'})})]})}function p(e={}){const{wrapper:n}={...(0,d.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(o,{...e})}):o(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>r,x:()=>a});var i=s(96540);const t={},d=i.createContext(t);function r(e){const n=i.useContext(d);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),i.createElement(d.Provider,{value:n},e.children)}}}]);