"use strict";(self.webpackChunkimdeepmind=self.webpackChunkimdeepmind||[]).push([[7043],{43320:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>d,metadata:()=>i,toc:()=>a});const i=JSON.parse('{"id":"frameworks-libraries/backend/fastapi/testing","title":"Testing & Debugging","description":"Testing and debugging are critical for building reliable and maintainable FastAPI applications. This guide covers unit/integration testing, mocking, debugging, and automated API testing.","source":"@site/docs/frameworks-libraries/backend/fastapi/testing.md","sourceDirName":"frameworks-libraries/backend/fastapi","slug":"/frameworks-libraries/backend/fastapi/testing","permalink":"/docs/frameworks-libraries/backend/fastapi/testing","draft":false,"unlisted":false,"editUrl":"https://github.com/imdeepmind/imdeepmind.github.io/blob/main/docs/frameworks-libraries/backend/fastapi/testing.md","tags":[],"version":"current","lastUpdatedBy":"Abhishek Chatterjee","lastUpdatedAt":1749212834000,"sidebarPosition":9,"frontMatter":{"sidebar_position":9},"sidebar":"tutorialSidebar","previous":{"title":"Performance & Optimization","permalink":"/docs/frameworks-libraries/backend/fastapi/optimization"},"next":{"title":"Deployment & Production Setup","permalink":"/docs/frameworks-libraries/backend/fastapi/deployment"}}');var t=s(74848),r=s(28453);const d={sidebar_position:9},l="Testing & Debugging",c={},a=[{value:"Testing FastAPI Apps with <code>pytest</code>",id:"testing-fastapi-apps-with-pytest",level:2},{value:"Installation",id:"installation",level:3},{value:"Basic Test Structure",id:"basic-test-structure",level:3},{value:"Using <code>TestClient</code> (from <code>fastapi.testclient</code>)",id:"using-testclient-from-fastapitestclient",level:2},{value:"Example: Testing CRUD Endpoints",id:"example-testing-crud-endpoints",level:3},{value:"Mocking Dependencies for Testing",id:"mocking-dependencies-for-testing",level:2},{value:"(A) Overriding Dependencies",id:"a-overriding-dependencies",level:3},{value:"(B) Using <code>unittest.mock</code>",id:"b-using-unittestmock",level:3},{value:"Debugging with <code>pdb</code>, <code>breakpoint()</code>, and Logging",id:"debugging-with-pdb-breakpoint-and-logging",level:2},{value:"(A) Debugging with <code>pdb</code>",id:"a-debugging-with-pdb",level:3},{value:"(B) Logging for Debugging",id:"b-logging-for-debugging",level:3},{value:"Automated API Testing (Postman, Swagger)",id:"automated-api-testing-postman-swagger",level:2},{value:"(A) Postman/Newman",id:"a-postmannewman",level:3},{value:"(B) Swagger/OpenAPI Automated Tests",id:"b-swaggeropenapi-automated-tests",level:3},{value:"Summary Table",id:"summary-table",level:2},{value:"Best Practices",id:"best-practices",level:2}];function o(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"testing--debugging",children:"Testing & Debugging"})}),"\n",(0,t.jsxs)(n.p,{children:["Testing and debugging are ",(0,t.jsx)(n.strong,{children:"critical"})," for building ",(0,t.jsx)(n.strong,{children:"reliable"})," and ",(0,t.jsx)(n.strong,{children:"maintainable"})," FastAPI applications. This guide covers ",(0,t.jsx)(n.strong,{children:"unit/integration testing, mocking, debugging, and automated API testing"}),"."]}),"\n",(0,t.jsxs)(n.h2,{id:"testing-fastapi-apps-with-pytest",children:["Testing FastAPI Apps with ",(0,t.jsx)(n.code,{children:"pytest"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"pytest"})," is the ",(0,t.jsx)(n.strong,{children:"standard"})," testing framework for Python. FastAPI works seamlessly with it."]}),"\n",(0,t.jsx)(n.h3,{id:"installation",children:"Installation"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"pip install pytest pytest-cov httpx\n"})}),"\n",(0,t.jsx)(n.h3,{id:"basic-test-structure",children:"Basic Test Structure"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'# tests/test_main.py\nfrom fastapi.testclient import TestClient\nfrom main import app\n\nclient = TestClient(app)\n\ndef test_read_root():\n    response = client.get("/")\n    assert response.status_code == 200\n    assert response.json() == {"message": "Hello World"}\n'})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Key Features"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"TestClient"})})," \u2013 Simulates HTTP requests."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Assertions"})," \u2013 Check status codes, response data, headers."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Fixtures"})," \u2013 Reusable test setups (e.g., DB sessions)."]}),"\n"]}),"\n",(0,t.jsxs)(n.h2,{id:"using-testclient-from-fastapitestclient",children:["Using ",(0,t.jsx)(n.code,{children:"TestClient"})," (from ",(0,t.jsx)(n.code,{children:"fastapi.testclient"}),")"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"TestClient"})," allows ",(0,t.jsx)(n.strong,{children:"mocking HTTP requests"})," without running a live server."]}),"\n",(0,t.jsx)(n.h3,{id:"example-testing-crud-endpoints",children:"Example: Testing CRUD Endpoints"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'def test_create_item():\n    response = client.post(\n        "/items/",\n        json={"name": "Foo", "price": 10.5},\n    )\n    assert response.status_code == 201\n    assert response.json() == {"name": "Foo", "price": 10.5}\n\ndef test_read_item():\n    response = client.get("/items/1")\n    assert response.status_code == 200\n    assert response.json() == {"id": 1, "name": "Foo"}\n'})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Supported Methods"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"client.get()"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"client.post()"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"client.put()"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"client.delete()"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"client.options()"})}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"mocking-dependencies-for-testing",children:"Mocking Dependencies for Testing"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Problem"}),": Some dependencies (DB, external APIs) should ",(0,t.jsx)(n.strong,{children:"not"})," run in tests."]}),"\n",(0,t.jsx)(n.h3,{id:"a-overriding-dependencies",children:"(A) Overriding Dependencies"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'from fastapi import FastAPI, Depends\nfrom main import app, get_db\n\n# Override the real DB dependency\ndef mock_get_db():\n    return "Fake DB Session"\n\napp.dependency_overrides[get_db] = mock_get_db\n\ndef test_with_mock_db():\n    response = client.get("/items/1")\n    assert response.json() == {"id": 1, "name": "Mocked Item"}\n'})}),"\n",(0,t.jsxs)(n.h3,{id:"b-using-unittestmock",children:["(B) Using ",(0,t.jsx)(n.code,{children:"unittest.mock"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'from unittest.mock import patch\n\ndef test_external_api_call():\n    with patch("module.external_api") as mock_api:\n        mock_api.return_value = {"data": "mocked"}\n        response = client.get("/external-data")\n        assert response.json() == {"data": "mocked"}\n'})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Best Practices"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Mock ",(0,t.jsx)(n.strong,{children:"external services"})," (Stripe, SMTP)."]}),"\n",(0,t.jsxs)(n.li,{children:["Keep ",(0,t.jsx)(n.strong,{children:"business logic"})," unmocked."]}),"\n"]}),"\n",(0,t.jsxs)(n.h2,{id:"debugging-with-pdb-breakpoint-and-logging",children:["Debugging with ",(0,t.jsx)(n.code,{children:"pdb"}),", ",(0,t.jsx)(n.code,{children:"breakpoint()"}),", and Logging"]}),"\n",(0,t.jsxs)(n.h3,{id:"a-debugging-with-pdb",children:["(A) Debugging with ",(0,t.jsx)(n.code,{children:"pdb"})]}),"\n",(0,t.jsx)(n.p,{children:"Insert a breakpoint in code:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"import pdb; pdb.set_trace()  # Python 3.7+\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"OR"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"breakpoint()  # Python 3.7+\n"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Commands"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"n"})," (next line)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"c"})," (continue)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"q"})," (quit)"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"b-logging-for-debugging",children:"(B) Logging for Debugging"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'import logging\n\nlogging.basicConfig(level=logging.DEBUG)\n\n@app.get("/debug")\ndef debug_endpoint():\n    logging.debug("Debug message")\n    return {"status": "ok"}\n'})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Log Levels"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"DEBUG"})," (detailed info)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"INFO"})," (general logs)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"ERROR"})," (critical issues)"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"automated-api-testing-postman-swagger",children:"Automated API Testing (Postman, Swagger)"}),"\n",(0,t.jsx)(n.h3,{id:"a-postmannewman",children:"(A) Postman/Newman"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Manual Testing"}),": Use Postman GUI."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Automated Testing"}),":","\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"newman run collection.json --environment env.json\n"})}),"\n",(0,t.jsx)(n.strong,{children:"Workflow"}),":"]}),"\n"]}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["Create a ",(0,t.jsx)(n.strong,{children:"Postman Collection"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:["Export as ",(0,t.jsx)(n.code,{children:"JSON"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:["Run with ",(0,t.jsx)(n.code,{children:"newman"})," in CI/CD."]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"b-swaggeropenapi-automated-tests",children:"(B) Swagger/OpenAPI Automated Tests"}),"\n",(0,t.jsxs)(n.p,{children:["FastAPI ",(0,t.jsx)(n.strong,{children:"auto-generates"})," OpenAPI docs (",(0,t.jsx)(n.code,{children:"/docs"}),"). Tools like ",(0,t.jsx)(n.strong,{children:"Schemathesis"})," can test all endpoints:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"pip install schemathesis\nschemathesis run http://localhost:8000/openapi.json\n"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Key Features"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Fuzz testing"})," (malformed inputs)."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Validate responses"})," against OpenAPI schema."]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"summary-table",children:"Summary Table"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Task"}),(0,t.jsx)(n.th,{children:"Tool/Method"}),(0,t.jsx)(n.th,{children:"Key Benefit"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"HTTP Testing"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"TestClient"})}),(0,t.jsx)(n.td,{children:"Simulate API calls"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Mocking"})}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.code,{children:"dependency_overrides"}),", ",(0,t.jsx)(n.code,{children:"unittest.mock"})]}),(0,t.jsx)(n.td,{children:"Isolate tests"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Debugging"})}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.code,{children:"pdb"}),", ",(0,t.jsx)(n.code,{children:"breakpoint()"}),", ",(0,t.jsx)(n.code,{children:"logging"})]}),(0,t.jsx)(n.td,{children:"Fix issues faster"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Automated Testing"})}),(0,t.jsx)(n.td,{children:"Postman, Newman, Schemathesis"}),(0,t.jsx)(n.td,{children:"CI/CD integration"})]})]})]}),"\n",(0,t.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Test all status codes"})," (200, 404, 422, etc.)."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Mock expensive calls"})," (DB, APIs)."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsxs)(n.strong,{children:["Use ",(0,t.jsx)(n.code,{children:"pytest fixtures"})]})," for reusable setups."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Run tests in CI/CD"})," (GitHub Actions, GitLab CI)."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Monitor test coverage"})," (",(0,t.jsx)(n.code,{children:"pytest --cov"}),")."]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(o,{...e})}):o(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>d,x:()=>l});var i=s(96540);const t={},r=i.createContext(t);function d(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:d(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);