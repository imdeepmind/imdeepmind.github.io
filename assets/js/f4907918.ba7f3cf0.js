"use strict";(self.webpackChunkimdeepmind=self.webpackChunkimdeepmind||[]).push([[6949],{30882:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>t,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"other/protocolbuf","title":"Protocol Buffers","description":"Protocol Buffers (Protobuf) is a language-neutral, platform-neutral mechanism for serializing structured data developed by Google. It is highly efficient, compact, and suitable for communication between services, especially in distributed systems.","source":"@site/docs/other/protocolbuf.md","sourceDirName":"other","slug":"/other/protocolbuf","permalink":"/docs/other/protocolbuf","draft":false,"unlisted":false,"editUrl":"https://github.com/imdeepmind/imdeepmind.github.io/blob/main/docs/other/protocolbuf.md","tags":[],"version":"current","lastUpdatedBy":"Abhishek Chatterjee","lastUpdatedAt":1736950294000,"sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"Man-in-the-Middle (MITM) Attack","permalink":"/docs/other/mitm-attack"}}');var i=s(74848),o=s(28453);const t={sidebar_position:3},a="Protocol Buffers",l={},d=[{value:"Advantages of Protocol Buffers",id:"advantages-of-protocol-buffers",level:2},{value:"How Protobuf Works",id:"how-protobuf-works",level:2},{value:"Defining a Protobuf Schema",id:"defining-a-protobuf-schema",level:2},{value:"Compiling the <code>.proto</code> File",id:"compiling-the-proto-file",level:2},{value:"Python Example",id:"python-example",level:2},{value:"Key Features",id:"key-features",level:2},{value:"Use Cases",id:"use-cases",level:2}];function c(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"protocol-buffers",children:"Protocol Buffers"})}),"\n",(0,i.jsx)(n.p,{children:"Protocol Buffers (Protobuf) is a language-neutral, platform-neutral mechanism for serializing structured data developed by Google. It is highly efficient, compact, and suitable for communication between services, especially in distributed systems."}),"\n",(0,i.jsxs)(n.p,{children:["Protobuf defines a structured data schema in a ",(0,i.jsx)(n.code,{children:".proto"})," file and uses that schema to serialize/deserialize data in a compact binary format. It is widely used in systems where performance and bandwidth efficiency are critical."]}),"\n",(0,i.jsx)(n.h2,{id:"advantages-of-protocol-buffers",children:"Advantages of Protocol Buffers"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Compact and Efficient"}),": Protobuf produces smaller and faster-encoded data compared to formats like JSON or XML."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Cross-Platform"}),": Protobuf is supported in many programming languages, including Python, Java, Go, and more."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Backward and Forward Compatibility"}),": Fields can be added or deprecated without breaking existing systems."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Human-Readable Schema"}),": Protobuf schema (",(0,i.jsx)(n.code,{children:".proto"})," files) are easy to define and understand."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Extensibility"}),": Allows the addition of new fields without impacting the older messages."]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"how-protobuf-works",children:"How Protobuf Works"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Define the Schema"}),": Write a ",(0,i.jsx)(n.code,{children:".proto"})," file defining the structure of your messages."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsxs)(n.strong,{children:["Compile the ",(0,i.jsx)(n.code,{children:".proto"})," File"]}),": Use the Protobuf compiler (",(0,i.jsx)(n.code,{children:"protoc"}),") to generate code for the desired programming language."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Serialize/Deserialize Data"}),": Use the generated classes to encode and decode data."]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"defining-a-protobuf-schema",children:"Defining a Protobuf Schema"}),"\n",(0,i.jsxs)(n.p,{children:["Here\u2019s an example of a ",(0,i.jsx)(n.code,{children:".proto"})," file:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-proto",children:"syntax = \"proto3\";\n\npackage tutorial;\n\nmessage Person {\n  int32 id = 1;         // Unique ID for the person\n  string name = 2;      // The person's name\n  string email = 3;     // The person's email\n}\n"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"syntax"}),": Specifies the Protobuf version."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"package"}),": Optional, defines a namespace."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"message"}),": Defines a data structure."]}),"\n",(0,i.jsxs)(n.li,{children:["Field types (",(0,i.jsx)(n.code,{children:"int32"}),", ",(0,i.jsx)(n.code,{children:"string"}),", etc.) and their unique identifiers (e.g., ",(0,i.jsx)(n.code,{children:"1"}),", ",(0,i.jsx)(n.code,{children:"2"}),", ",(0,i.jsx)(n.code,{children:"3"}),") are specified."]}),"\n"]}),"\n",(0,i.jsxs)(n.h2,{id:"compiling-the-proto-file",children:["Compiling the ",(0,i.jsx)(n.code,{children:".proto"})," File"]}),"\n",(0,i.jsxs)(n.p,{children:["To generate Python code from the ",(0,i.jsx)(n.code,{children:".proto"})," file:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"protoc --python_out=. tutorial.proto\n"})}),"\n",(0,i.jsxs)(n.p,{children:["This generates ",(0,i.jsx)(n.code,{children:"tutorial_pb2.py"})," with classes to work with the defined schema."]}),"\n",(0,i.jsx)(n.h2,{id:"python-example",children:"Python Example"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Installation"}),"\nInstall the ",(0,i.jsx)(n.code,{children:"protobuf"})," library:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"pip install protobuf\n"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Working with the Generated Code"}),"\nUsing the compiled Protobuf file (",(0,i.jsx)(n.code,{children:"tutorial_pb2.py"}),"):"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'import tutorial_pb2\n\n# Create a new Person object\nperson = tutorial_pb2.Person()\nperson.id = 123\nperson.name = "John Doe"\nperson.email = "john.doe@example.com"\n\n# Serialize to binary format\nserialized_data = person.SerializeToString()\nprint("Serialized Data:", serialized_data)\n\n# Deserialize from binary format\nnew_person = tutorial_pb2.Person()\nnew_person.ParseFromString(serialized_data)\n\nprint("\\nDeserialized Data:")\nprint("ID:", new_person.id)\nprint("Name:", new_person.name)\nprint("Email:", new_person.email)\n'})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Output"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-plaintext",children:"Serialized Data: b'\\x08{\\x12\\x08John Doe\\x1a\\x12john.doe@example.com'\n\nDeserialized Data:\nID: 123\nName: John Doe\nEmail: john.doe@example.com\n"})}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"key-features",children:"Key Features"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Optional Fields"}),": Fields can be omitted, and defaults will be used."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Enums"}),": Protobuf supports enumerations."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Nested Messages"}),": Messages can contain other messages as fields."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Repeated Fields"}),": Represent arrays or lists."]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["Example ",(0,i.jsx)(n.code,{children:".proto"})," with enums and repeated fields:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-proto",children:'syntax = "proto3";\n\nmessage AddressBook {\n  repeated Person people = 1;\n}\n\nmessage Person {\n  enum PhoneType {\n    MOBILE = 0;\n    HOME = 1;\n    WORK = 2;\n  }\n  string name = 1;\n  int32 id = 2;\n  string email = 3;\n  repeated PhoneNumber phones = 4;\n}\n\nmessage PhoneNumber {\n  string number = 1;\n  Person.PhoneType type = 2;\n}\n'})}),"\n",(0,i.jsx)(n.h2,{id:"use-cases",children:"Use Cases"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Microservices Communication"}),": Protobuf is efficient for communication between microservices."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Data Serialization"}),": Suitable for persisting structured data or exchanging it between systems."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Streaming"}),": Often used in gRPC, a high-performance RPC framework."]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>t,x:()=>a});var r=s(96540);const i={},o=r.createContext(i);function t(e){const n=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:t(e.components),r.createElement(o.Provider,{value:n},e.children)}}}]);