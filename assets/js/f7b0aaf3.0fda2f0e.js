"use strict";(self.webpackChunkimdeepmind=self.webpackChunkimdeepmind||[]).push([[6211],{43393:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>a,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"cloud/aws/aurora","title":"aurora","description":"\x3c!--","source":"@site/docs/cloud/aws/aurora.md","sourceDirName":"cloud/aws","slug":"/cloud/aws/aurora","permalink":"/docs/cloud/aws/aurora","draft":false,"unlisted":false,"editUrl":"https://github.com/imdeepmind/imdeepmind.github.io/blob/main/docs/cloud/aws/aurora.md","tags":[],"version":"current","lastUpdatedBy":"Abhishek Chatterjee","lastUpdatedAt":1749210481000,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Stashing in Git","permalink":"/docs/version-control/git/stashing"},"next":{"title":"Introduction","permalink":"/docs/design-patterns/introduction"}}');var s=n(74848),t=n(28453);const a={},o="Aurora",l={},d=[{value:"Key Features of Amazon Aurora",id:"key-features-of-amazon-aurora",level:2},{value:"High Performance",id:"high-performance",level:3},{value:"Scalability",id:"scalability",level:3},{value:"High Availability &amp; Durability",id:"high-availability--durability",level:3},{value:"Fully Managed",id:"fully-managed",level:3},{value:"Security &amp; Compliance",id:"security--compliance",level:3},{value:"Cost-Effective",id:"cost-effective",level:3},{value:"Aurora Architecture Internals",id:"aurora-architecture-internals",level:2},{value:"Aurora\u2019s Distributed &amp; Decoupled Storage-Compute Architecture",id:"auroras-distributed--decoupled-storage-compute-architecture",level:3},{value:"Separation of Compute and Storage",id:"separation-of-compute-and-storage",level:4},{value:"Key Benefits of Decoupled Architecture",id:"key-benefits-of-decoupled-architecture",level:4},{value:"Quorum-Based Replication (4 out of 6 Replicas)",id:"quorum-based-replication-4-out-of-6-replicas",level:3},{value:"How Aurora Ensures Durability",id:"how-aurora-ensures-durability",level:4},{value:"Advantages Over Traditional Replication",id:"advantages-over-traditional-replication",level:4},{value:"Redo Log Buffering &amp; Durability Guarantees",id:"redo-log-buffering--durability-guarantees",level:4},{value:"<strong>3.1 Log-Structured Storage</strong>",id:"31-log-structured-storage",level:3},{value:"<strong>3.2 Redo Log Optimization</strong>",id:"32-redo-log-optimization",level:3},{value:"<strong>3.3 Comparison with Traditional Databases</strong>",id:"33-comparison-with-traditional-databases",level:3},{value:"<strong>4. Aurora MySQL vs. Aurora PostgreSQL Internals</strong>",id:"4-aurora-mysql-vs-aurora-postgresql-internals",level:2},{value:"<strong>4.1 Aurora MySQL</strong>",id:"41-aurora-mysql",level:3},{value:"<strong>4.2 Aurora PostgreSQL</strong>",id:"42-aurora-postgresql",level:3},{value:"<strong>4.3 Key Differences Between Aurora MySQL &amp; PostgreSQL</strong>",id:"43-key-differences-between-aurora-mysql--postgresql",level:3},{value:"<strong>5. How Aurora Differs from Standard MySQL/PostgreSQL at the Engine Level</strong>",id:"5-how-aurora-differs-from-standard-mysqlpostgresql-at-the-engine-level",level:2},{value:"<strong>5.1 Storage Engine Modifications</strong>",id:"51-storage-engine-modifications",level:3},{value:"<strong>5.2 Networking &amp; I/O Optimizations</strong>",id:"52-networking--io-optimizations",level:3},{value:"<strong>5.3 Recovery &amp; Crash Consistency</strong>",id:"53-recovery--crash-consistency",level:3},{value:"<strong>5.4 Performance Enhancements</strong>",id:"54-performance-enhancements",level:3}];function c(e){const r={blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(r.header,{children:(0,s.jsx)(r.h1,{id:"aurora",children:"Aurora"})}),"\n",(0,s.jsxs)(r.blockquote,{children:["\n",(0,s.jsx)(r.p,{children:"Income note"}),"\n"]}),"\n",(0,s.jsx)(r.p,{children:"Amazon Aurora is a fully managed, high-performance relational database engine compatible with MySQL and PostgreSQL. It is part of Amazon Web Services (AWS) and is designed to combine the speed and reliability of high-end commercial databases with the simplicity and cost-effectiveness of open-source databases."}),"\n",(0,s.jsx)(r.p,{children:"Aurora is built for the cloud, providing superior performance, scalability, and availability while reducing administrative overhead. It is optimized for workloads requiring high throughput, low latency, and enterprise-grade reliability."}),"\n",(0,s.jsx)(r.h2,{id:"key-features-of-amazon-aurora",children:"Key Features of Amazon Aurora"}),"\n",(0,s.jsx)(r.h3,{id:"high-performance",children:"High Performance"}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsx)(r.li,{children:"5x Faster than MySQL: Aurora delivers up to five times the throughput of standard MySQL running on the same hardware."}),"\n",(0,s.jsx)(r.li,{children:"3x Faster than PostgreSQL: It provides up to three times the performance of standard PostgreSQL."}),"\n",(0,s.jsx)(r.li,{children:"Low-Latency Read Replicas: Aurora supports low-latency read replicas for scaling read-heavy workloads."}),"\n"]}),"\n",(0,s.jsx)(r.h3,{id:"scalability",children:"Scalability"}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsx)(r.li,{children:"Auto-Scaling Storage: Aurora automatically scales storage from 10 GiB up to 128 TiB without downtime."}),"\n",(0,s.jsx)(r.li,{children:"Compute Scaling: Database instances can be scaled up or down with minimal downtime."}),"\n",(0,s.jsx)(r.li,{children:"Read Replicas: Supports up to 15 read replicas (compared to MySQL\u2019s 5) for horizontal read scaling."}),"\n"]}),"\n",(0,s.jsx)(r.h3,{id:"high-availability--durability",children:"High Availability & Durability"}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsx)(r.li,{children:"Multi-AZ Deployments: Aurora replicates data across multiple Availability Zones (AZs) for fault tolerance."}),"\n",(0,s.jsx)(r.li,{children:"Self-Healing Storage: Automatically detects and repairs disk failures."}),"\n",(0,s.jsx)(r.li,{children:"Continuous Backups: Point-in-time recovery and automated backups with no performance impact."}),"\n"]}),"\n",(0,s.jsx)(r.h3,{id:"fully-managed",children:"Fully Managed"}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsx)(r.li,{children:"Automated Patching & Updates: AWS handles database patching and minor version upgrades."}),"\n",(0,s.jsx)(r.li,{children:"Backup & Restore: Automated backups with retention periods up to 35 days."}),"\n",(0,s.jsx)(r.li,{children:"Monitoring & Alerts: Integrated with Amazon CloudWatch for performance metrics and alarms."}),"\n"]}),"\n",(0,s.jsx)(r.h3,{id:"security--compliance",children:"Security & Compliance"}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsx)(r.li,{children:"Encryption at Rest & in Transit: Supports AES-256 encryption for data at rest and SSL/TLS for data in transit."}),"\n",(0,s.jsx)(r.li,{children:"Network Isolation: Works with Amazon VPC for secure network configurations."}),"\n",(0,s.jsx)(r.li,{children:"IAM Integration: Fine-grained access control using AWS Identity and Access Management (IAM)."}),"\n",(0,s.jsx)(r.li,{children:"Compliance Certifications: Compliant with SOC, PCI-DSS, HIPAA, ISO, and GDPR."}),"\n"]}),"\n",(0,s.jsx)(r.h3,{id:"cost-effective",children:"Cost-Effective"}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsx)(r.li,{children:"Pay-as-You-Go Pricing: No upfront costs; pay only for the compute and storage used."}),"\n",(0,s.jsx)(r.li,{children:"No License Fees: Unlike traditional enterprise databases, Aurora has no licensing costs."}),"\n",(0,s.jsx)(r.li,{children:"Serverless Option: Aurora Serverless automatically adjusts capacity based on demand, reducing costs for intermittent workloads."}),"\n"]}),"\n",(0,s.jsx)(r.h2,{id:"aurora-architecture-internals",children:"Aurora Architecture Internals"}),"\n",(0,s.jsx)(r.p,{children:"Amazon Aurora reimagines traditional database architecture by decoupling storage and compute while leveraging a distributed, fault-tolerant design. Below is a detailed breakdown of Aurora\u2019s internal architecture, replication model, durability mechanisms, and engine-level differences compared to standard MySQL and PostgreSQL."}),"\n",(0,s.jsx)(r.h3,{id:"auroras-distributed--decoupled-storage-compute-architecture",children:"Aurora\u2019s Distributed & Decoupled Storage-Compute Architecture"}),"\n",(0,s.jsx)(r.h4,{id:"separation-of-compute-and-storage",children:"Separation of Compute and Storage"}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:["Unlike traditional databases where storage is tightly coupled with compute (local disks or attached EBS volumes), Aurora ",(0,s.jsx)(r.strong,{children:"decouples storage from compute"}),"."]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"Compute Layer"}),": Handles query processing, transactions, and caching (using DB instances)."]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"Storage Layer"}),": A distributed, auto-scaling, fault-tolerant storage system that spans ",(0,s.jsx)(r.strong,{children:"multiple Availability Zones (AZs)"}),"."]}),"\n"]}),"\n",(0,s.jsx)(r.h4,{id:"key-benefits-of-decoupled-architecture",children:"Key Benefits of Decoupled Architecture"}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"Independent Scaling"}),": Compute (CPU/RAM) and storage can scale independently."]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"High Availability"}),": Storage is replicated across AZs, so compute failures do not affect data durability."]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"Faster Recovery"}),": Since storage is separate, a failed DB instance can be quickly replaced without data movement."]}),"\n"]}),"\n",(0,s.jsx)(r.h3,{id:"quorum-based-replication-4-out-of-6-replicas",children:"Quorum-Based Replication (4 out of 6 Replicas)"}),"\n",(0,s.jsx)(r.h4,{id:"how-aurora-ensures-durability",children:"How Aurora Ensures Durability"}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:["Aurora\u2019s storage is distributed across ",(0,s.jsx)(r.strong,{children:"6 storage nodes"})," (2 per AZ in a 3-AZ setup)."]}),"\n",(0,s.jsxs)(r.li,{children:["Data is written using a ",(0,s.jsx)(r.strong,{children:"quorum model"}),": ",(0,s.jsx)(r.strong,{children:"4 out of 6 replicas must acknowledge writes"})," before a transaction is considered durable.","\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:["This ensures ",(0,s.jsx)(r.strong,{children:"tolerance for up to 2 storage node failures"})," without data loss."]}),"\n",(0,s.jsxs)(r.li,{children:["Reads require ",(0,s.jsx)(r.strong,{children:"3 out of 6 replicas"})," to maintain consistency."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(r.h4,{id:"advantages-over-traditional-replication",children:"Advantages Over Traditional Replication"}),"\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.th,{children:"Feature"}),(0,s.jsx)(r.th,{children:"Aurora (Quorum Model)"}),(0,s.jsx)(r.th,{children:"Traditional MySQL/PostgreSQL (Synchronous Replication)"})]})}),(0,s.jsxs)(r.tbody,{children:[(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.strong,{children:"Write Durability"})}),(0,s.jsx)(r.td,{children:"4/6 replicas (strong consistency)"}),(0,s.jsx)(r.td,{children:"Typically 2 replicas (primary + standby)"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.strong,{children:"Failure Tolerance"})}),(0,s.jsx)(r.td,{children:"Survives 2 storage node failures"}),(0,s.jsx)(r.td,{children:"Usually fails if primary & standby both crash"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.strong,{children:"Performance Impact"})}),(0,s.jsx)(r.td,{children:"Lower latency (parallel writes)"}),(0,s.jsx)(r.td,{children:"Higher latency (sequential replication)"})]})]})]}),"\n",(0,s.jsx)(r.h4,{id:"redo-log-buffering--durability-guarantees",children:"Redo Log Buffering & Durability Guarantees"}),"\n",(0,s.jsx)(r.h3,{id:"31-log-structured-storage",children:(0,s.jsx)(r.strong,{children:"3.1 Log-Structured Storage"})}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:["Aurora ",(0,s.jsx)(r.strong,{children:"does not write data pages directly"})," to disk. Instead, it ",(0,s.jsx)(r.strong,{children:"only ships redo logs"})," to storage nodes."]}),"\n",(0,s.jsxs)(r.li,{children:["The storage layer ",(0,s.jsx)(r.strong,{children:"reconstructs data pages"})," from logs in the background, reducing I/O overhead."]}),"\n"]}),"\n",(0,s.jsx)(r.h3,{id:"32-redo-log-optimization",children:(0,s.jsx)(r.strong,{children:"3.2 Redo Log Optimization"})}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"Minimizes Write Amplification"}),": Only log records are sent over the network, not entire pages."]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"Asynchronous Page Materialization"}),": Storage nodes apply logs in the background to reconstruct pages."]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"Durability Without fsync() Delays"}),": Aurora avoids waiting for disk flushes (",(0,s.jsx)(r.code,{children:"fsync"}),") by relying on quorum commits."]}),"\n"]}),"\n",(0,s.jsx)(r.h3,{id:"33-comparison-with-traditional-databases",children:(0,s.jsx)(r.strong,{children:"3.3 Comparison with Traditional Databases"})}),"\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.th,{children:"Mechanism"}),(0,s.jsx)(r.th,{children:"Aurora"}),(0,s.jsx)(r.th,{children:"Standard MySQL/PostgreSQL"})]})}),(0,s.jsxs)(r.tbody,{children:[(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.strong,{children:"Primary Write Mechanism"})}),(0,s.jsx)(r.td,{children:"Ships redo logs only"}),(0,s.jsx)(r.td,{children:"Writes full data pages + logs"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.strong,{children:"Durability Latency"})}),(0,s.jsx)(r.td,{children:"Faster (quorum-based)"}),(0,s.jsx)(r.td,{children:"Slower (depends on disk sync)"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.strong,{children:"Recovery Time"})}),(0,s.jsx)(r.td,{children:"Near-instant (logs reconstruct state)"}),(0,s.jsx)(r.td,{children:"Slower (requires replaying logs)"})]})]})]}),"\n",(0,s.jsx)(r.h2,{id:"4-aurora-mysql-vs-aurora-postgresql-internals",children:(0,s.jsx)(r.strong,{children:"4. Aurora MySQL vs. Aurora PostgreSQL Internals"})}),"\n",(0,s.jsx)(r.h3,{id:"41-aurora-mysql",children:(0,s.jsx)(r.strong,{children:"4.1 Aurora MySQL"})}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"Based on MySQL 5.7/8.0"})," but with significant optimizations:","\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"No InnoDB Double-Write Buffer"}),": Aurora\u2019s storage layer eliminates the need for this by ensuring crash-safe page writes."]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"Parallel Query Execution"}),": Improves analytical query performance."]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"Optimized Buffer Pool Management"}),": Reduced contention for memory access."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(r.h3,{id:"42-aurora-postgresql",children:(0,s.jsx)(r.strong,{children:"4.2 Aurora PostgreSQL"})}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"Based on PostgreSQL 11+"})," with AWS enhancements:","\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"Native PostgreSQL Replication Replaced"}),": Uses Aurora\u2019s distributed storage instead of PostgreSQL\u2019s WAL shipping."]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"Optimized Vacuuming"}),": Reduced bloat impact due to Aurora\u2019s storage layer."]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"Better Read Scalability"}),": Supports up to 15 read replicas (vs PostgreSQL\u2019s ~10)."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(r.h3,{id:"43-key-differences-between-aurora-mysql--postgresql",children:(0,s.jsx)(r.strong,{children:"4.3 Key Differences Between Aurora MySQL & PostgreSQL"})}),"\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.th,{children:"Feature"}),(0,s.jsx)(r.th,{children:"Aurora MySQL"}),(0,s.jsx)(r.th,{children:"Aurora PostgreSQL"})]})}),(0,s.jsxs)(r.tbody,{children:[(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.strong,{children:"Underlying Engine"})}),(0,s.jsx)(r.td,{children:"MySQL 5.7/8.0"}),(0,s.jsx)(r.td,{children:"PostgreSQL 11+"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.strong,{children:"Replication Model"})}),(0,s.jsx)(r.td,{children:"Aurora storage layer (not MySQL binlog)"}),(0,s.jsx)(r.td,{children:"Aurora storage layer (not PostgreSQL WAL)"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.strong,{children:"Buffer Pool"})}),(0,s.jsx)(r.td,{children:"Optimized InnoDB buffer pool"}),(0,s.jsx)(r.td,{children:"Shared buffers + Aurora optimizations"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.strong,{children:"Parallel Query"})}),(0,s.jsx)(r.td,{children:"Supported"}),(0,s.jsx)(r.td,{children:"Supported (but different implementation)"})]})]})]}),"\n",(0,s.jsx)(r.h2,{id:"5-how-aurora-differs-from-standard-mysqlpostgresql-at-the-engine-level",children:(0,s.jsx)(r.strong,{children:"5. How Aurora Differs from Standard MySQL/PostgreSQL at the Engine Level"})}),"\n",(0,s.jsx)(r.h3,{id:"51-storage-engine-modifications",children:(0,s.jsx)(r.strong,{children:"5.1 Storage Engine Modifications"})}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"No Direct Disk Writes"}),": Aurora bypasses the local filesystem and sends logs directly to the distributed storage layer."]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"No Double-Write Buffer (MySQL)"}),": Not needed due to Aurora\u2019s crash-safe storage."]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"No WAL Archiving (PostgreSQL)"}),": Aurora handles log shipping internally."]}),"\n"]}),"\n",(0,s.jsx)(r.h3,{id:"52-networking--io-optimizations",children:(0,s.jsx)(r.strong,{children:"5.2 Networking & I/O Optimizations"})}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"Bypasses OS Page Cache"}),": Aurora uses a ",(0,s.jsx)(r.strong,{children:"user-space network stack"})," for lower-latency log shipping."]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"Zero-Copy Log Shipping"}),": Reduces CPU overhead by avoiding unnecessary data copies."]}),"\n"]}),"\n",(0,s.jsx)(r.h3,{id:"53-recovery--crash-consistency",children:(0,s.jsx)(r.strong,{children:"5.3 Recovery & Crash Consistency"})}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"Instant Crash Recovery"}),": Since storage nodes have quorum-committed logs, recovery is near-instant."]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"No Need for Crash Recovery (PostgreSQL)"}),": Unlike standard PostgreSQL, Aurora does not require lengthy ",(0,s.jsx)(r.code,{children:"pg_wal"})," replay."]}),"\n"]}),"\n",(0,s.jsx)(r.h3,{id:"54-performance-enhancements",children:(0,s.jsx)(r.strong,{children:"5.4 Performance Enhancements"})}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"Read Scaling"}),": Up to 15 low-lag replicas (vs MySQL\u2019s 5, PostgreSQL\u2019s ~10)."]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"Write Scaling (Multi-Master)"}),": Aurora PostgreSQL supports multi-master clustering for high write throughput."]}),"\n"]})]})}function h(e={}){const{wrapper:r}={...(0,t.R)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},28453:(e,r,n)=>{n.d(r,{R:()=>a,x:()=>o});var i=n(96540);const s={},t=i.createContext(s);function a(e){const r=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function o(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),i.createElement(t.Provider,{value:r},e.children)}}}]);